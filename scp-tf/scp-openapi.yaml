components:
  schemas:
    AcceptTermsResponse:
      properties:
        accepted_at:
          format: date-time
          type: string
        ip_address:
          type: string
      required:
      - accepted_at
      - ip_address
      type: object
    Account:
      allOf:
      - $ref: '#/components/schemas/Info'
      - $ref: '#/components/schemas/GenericFields'
      description: Account holds account specific claims data
      properties:
        authorization:
          $ref: '#/components/schemas/ExternalAuthorization'
        default_permissions:
          $ref: '#/components/schemas/Permissions'
        exports:
          $ref: '#/components/schemas/Exports'
        imports:
          $ref: '#/components/schemas/Imports'
        limits:
          $ref: '#/components/schemas/OperatorLimits'
        mappings:
          $ref: '#/components/schemas/Mapping'
        revocations:
          $ref: '#/components/schemas/RevocationList'
        signing_keys:
          $ref: '#/components/schemas/SigningKeys'
      type: object
    AccountChartType:
      enum:
      - NumLeafNodes
      - NumConnections
      - NumSubscriptions
      - BytesSent
      - BytesReceived
      - NumMessagesSent
      - NumMessagesReceived
      - JetStreamEnabled
      - NumStreams
      - NumStreamConsumers
      - JetStreamMemoryUsed
      - JetStreamStorageUsed
      - JetStreamMemoryReserved
      - JetStreamStorageReserved
      type: string
    AccountClaims:
      allOf:
      - $ref: '#/components/schemas/ClaimsData'
      description: AccountClaims defines the body of an account JWT
      properties:
        nats:
          $ref: '#/components/schemas/Account'
      type: object
    AccountClaimsInfo:
      properties:
        js_enabled:
          type: boolean
      required:
      - js_enabled
      type: object
    AccountConnectionsListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Connz'
          type: array
      required:
      - items
      type: object
    AccountCreateRequest:
      properties:
        connectors:
          type: boolean
        connectors_log_stream:
          type: string
        jwt_settings:
          $ref: '#/components/schemas/AccountJWTSettings'
        name:
          type: string
        user_jwt_expires_in_secs:
          format: int64
          type: integer
        workloads:
          type: boolean
        workloads_log_stream:
          type: string
      required:
      - name
      type: object
    AccountExportResponse:
      properties:
        id:
          type: string
        jwt:
          type: string
        name:
          type: string
        seed:
          type: string
        signing_key_groups:
          items:
            $ref: '#/components/schemas/SigningKeyGroupExport'
          type: array
        users:
          items:
            $ref: '#/components/schemas/UserExport'
          type: array
      required:
      - id
      type: object
    AccountInfo:
      properties:
        account_public_key:
          type: string
        id:
          type: string
        is_platform_account:
          type: boolean
        is_scp_account:
          type: boolean
        is_system_account:
          type: boolean
        name:
          type: string
        user_jwt_expires_in_secs:
          format: int64
          type: integer
      required:
      - id
      - account_public_key
      - name
      - user_jwt_expires_in_secs
      - is_system_account
      - is_scp_account
      - is_platform_account
      type: object
    AccountInfoListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AccountInfo'
          type: array
      required:
      - items
      type: object
    AccountJWTSettings:
      allOf:
      - $ref: '#/components/schemas/Info'
      properties:
        authorization:
          $ref: '#/components/schemas/ExternalAuthorization'
        limits:
          $ref: '#/components/schemas/OperatorLimits'
        mappings:
          $ref: '#/components/schemas/Mapping'
        revocations:
          $ref: '#/components/schemas/RevocationList'
        tags:
          items:
            type: string
          type: array
      type: object
    AccountJWTSettingsPatch:
      properties:
        authorization:
          allOf:
          - $ref: '#/components/schemas/ExternalAuthorizationPatch'
          nullable: true
          type: object
        description:
          nullable: true
          type: string
        info_url:
          nullable: true
          type: string
        limits:
          allOf:
          - $ref: '#/components/schemas/OperatorLimitsPatch'
          nullable: true
          type: object
        mappings:
          allOf:
          - $ref: '#/components/schemas/MappingPatch'
          nullable: true
          type: object
        revocations:
          allOf:
          - $ref: '#/components/schemas/RevocationListPatch'
          nullable: true
          type: object
        tags:
          items:
            type: string
          nullable: true
          type: array
      type: object
    AccountLimits:
      properties:
        conn:
          format: int64
          type: integer
        disallow_bearer:
          type: boolean
        exports:
          format: int64
          type: integer
        imports:
          format: int64
          type: integer
        leaf:
          format: int64
          type: integer
        wildcards:
          type: boolean
      type: object
    AccountListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AccountViewResponse'
          type: array
      required:
      - items
      type: object
    AccountMetrics:
      properties:
        nats_core_account_bytes_recv:
          format: double
          type: number
        nats_core_account_bytes_sent:
          format: double
          type: number
        nats_core_account_conn_count:
          format: double
          type: number
        nats_core_account_jetstream_consumer_count:
          format: double
          type: number
        nats_core_account_jetstream_enabled:
          format: double
          type: number
        nats_core_account_jetstream_memory_reserved:
          format: double
          type: number
        nats_core_account_jetstream_memory_used:
          format: double
          type: number
        nats_core_account_jetstream_storage_reserved:
          format: double
          type: number
        nats_core_account_jetstream_storage_used:
          format: double
          type: number
        nats_core_account_jetstream_stream_count:
          format: double
          type: number
        nats_core_account_leaf_count:
          format: double
          type: number
        nats_core_account_msgs_recv:
          format: double
          type: number
        nats_core_account_msgs_sent:
          format: double
          type: number
        nats_core_account_sub_count:
          format: double
          type: number
      required:
      - nats_core_account_bytes_recv
      - nats_core_account_bytes_sent
      - nats_core_account_conn_count
      - nats_core_account_jetstream_consumer_count
      - nats_core_account_jetstream_enabled
      - nats_core_account_jetstream_memory_reserved
      - nats_core_account_jetstream_memory_used
      - nats_core_account_jetstream_storage_reserved
      - nats_core_account_jetstream_storage_used
      - nats_core_account_jetstream_stream_count
      - nats_core_account_leaf_count
      - nats_core_account_msgs_recv
      - nats_core_account_msgs_sent
      - nats_core_account_sub_count
      type: object
    AccountOverviewResponse:
      properties:
        account_public_key:
          type: string
        metrics:
          properties:
            BytesReceived:
              format: double
              type: number
            BytesSent:
              format: double
              type: number
            JetStreamR1StorageUsed:
              format: double
              type: number
            JetStreamR3StorageUsed:
              format: double
              type: number
            NumConnections:
              format: double
              type: number
            NumLeafNodes:
              format: double
              type: number
            NumMessagesReceived:
              format: double
              type: number
            NumMessagesSent:
              format: double
              type: number
          required:
          - NumLeafNodes
          - NumConnections
          - JetStreamR1StorageUsed
          - JetStreamR3StorageUsed
          - BytesReceived
          - BytesSent
          - NumMessagesReceived
          - NumMessagesSent
          type: object
      required:
      - account_public_key
      - metrics
      type: object
    AccountUpdateRequest:
      properties:
        connectors:
          type: boolean
        connectors_log_stream:
          type: string
        jwt_settings:
          $ref: '#/components/schemas/AccountJWTSettingsPatch'
        name:
          type: string
        user_jwt_expires_in_secs:
          format: int64
          type: integer
        workloads:
          type: boolean
        workloads_log_stream:
          type: string
      type: object
    AccountViewResponse:
      properties:
        account_public_key:
          type: string
        claims:
          $ref: '#/components/schemas/jwtAccountClaims'
        claims_info:
          $ref: '#/components/schemas/AccountClaimsInfo'
        connectors:
          type: boolean
        connectors_log_stream:
          type: string
        created:
          format: date-time
          type: string
        id:
          type: string
        is_platform_account:
          type: boolean
        is_scp_account:
          type: boolean
        is_system_account:
          type: boolean
        jwt:
          type: string
        jwt_settings:
          $ref: '#/components/schemas/AccountJWTSettings'
        jwt_sync_error:
          type: string
        jwt_sync_status:
          $ref: '#/components/schemas/JwtSyncStatus'
        name:
          type: string
        nsc_managed:
          type: boolean
        system:
          $ref: '#/components/schemas/SystemInfo'
        team:
          $ref: '#/components/schemas/TeamInfo'
        user_jwt_expires_in_secs:
          format: int64
          type: integer
        workloads:
          type: boolean
        workloads_log_stream:
          type: string
      required:
      - id
      - created
      - system
      - team
      - account_public_key
      - name
      - jwt
      - jwt_settings
      - claims
      - claims_info
      - user_jwt_expires_in_secs
      - is_system_account
      - is_scp_account
      - is_platform_account
      - nsc_managed
      - jwt_sync_status
      - jwt_sync_error
      - connectors
      - workloads
      type: object
    AccountsOverviewListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AccountOverviewResponse'
          type: array
      required:
      - items
      type: object
    AckPolicy:
      description: enums have been changed to match UnmarshalJSON in https://github.com/nats-io/jsm.go/blob/main/api/consumers.go
      enum:
      - none
      - all
      - explicit
      type: string
    Activation:
      allOf:
      - $ref: '#/components/schemas/GenericFields'
      description: Activation defines the custom parts of an activation claim
      properties:
        issuer_account:
          description: |-
            IssuerAccount stores the public key for the account the issuer represents.
            When set, the claim was issued by a signing key.
          type: string
        kind:
          $ref: '#/components/schemas/ExportType'
        subject:
          type: string
      type: object
    ActivationClaims:
      allOf:
      - $ref: '#/components/schemas/ClaimsData'
      description: ActivationClaims holds the data specific to an activation JWT
      properties:
        nats:
          $ref: '#/components/schemas/Activation'
      type: object
    AddRequest:
      properties:
        compat_policy:
          $ref: '#/components/schemas/SchemaCompatPolicy'
        definition:
          description: |-
            TODO(jrm): we should validate the passed schema
            The schema definition (required).
          type: string
        description:
          description: Description of the schema (optional).
          type: string
        format:
          $ref: '#/components/schemas/SchemaFormat'
        metadata:
          additionalProperties:
            type: string
          description: Metadata is a map of key-value pairs (optional).
          type: object
        name:
          description: Unique name of the schema (required).
          type: string
      required:
      - name
      - definition
      - format
      type: object
    AddResponse:
      properties:
        revision:
          type: integer
        version:
          type: integer
      required:
      - revision
      - version
      type: object
    AdminAppUserCreateRequest:
      properties:
        generate_token:
          type: boolean
        password:
          type: string
        username:
          type: string
      required:
      - username
      - password
      type: object
    AdminAppUserCreateResponse:
      properties:
        token:
          type: string
      type: object
    AgentTokenCurrentResponse:
      allOf:
      - $ref: '#/components/schemas/AgentTokenViewResponse'
      - required:
        - token
        - url
      properties:
        token:
          type: string
        url:
          type: string
      type: object
    AgentTokenListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AgentTokenViewResponse'
          type: array
      required:
      - items
      type: object
    AgentTokenRotateRequest:
      type: object
    AgentTokenRotateResponse:
      properties:
        id:
          type: string
        token:
          type: string
      required:
      - id
      - token
      type: object
    AgentTokenViewResponse:
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        is_current:
          type: boolean
        last_accessed_at:
          format: date-time
          type: string
        nkey_public:
          type: string
        rotated_at:
          format: date-time
          type: string
      required:
      - id
      - created
      - nkey_public
      - is_current
      type: object
    AlertListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AlertViewResponse'
          type: array
      required:
      - items
      type: object
    AlertRuleAccountCreateRequest:
      allOf:
      - $ref: '#/components/schemas/AlertRuleBaseCreateRequest'
      - required:
        - rule_type
      properties:
        consumer_name:
          type: string
        rule_type:
          enum:
          - Account
          - Stream
          - Consumer
          type: string
        stream_name:
          type: string
      type: object
    AlertRuleBaseCreateRequest:
      properties:
        duration_in_secs:
          type: integer
        message:
          type: string
        metric:
          type: string
        severity:
          $ref: '#/components/schemas/AlertRuleSeverity'
        threshold_expression_metric:
          $ref: '#/components/schemas/AlertRuleThresholdMetric'
        threshold_expression_multiplier:
          type: number
        threshold_fixed_value:
          type: number
        threshold_operator:
          $ref: '#/components/schemas/AlertRuleOperator'
      required:
      - message
      - metric
      - threshold_operator
      - duration_in_secs
      - severity
      type: object
    AlertRuleListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AlertRuleViewResponse'
          type: array
      required:
      - items
      type: object
    AlertRuleOperator:
      enum:
      - Greater Than
      - Less Than
      - Greater Than Or Equal
      - Less Than Or Equal
      - Equal
      - Not Equal
      type: string
    AlertRuleSeverity:
      enum:
      - Info
      - Warn
      - Error
      - Critical
      type: string
    AlertRuleSystemCreateRequest:
      $ref: '#/components/schemas/AlertRuleBaseCreateRequest'
    AlertRuleThresholdMetric:
      enum:
      - account.max_connections
      - account.max_consumers
      - account.max_bytes
      - account.max_exports
      - account.max_imports
      - account.max_jwt_expiry
      - account.max_msg_payload
      - account.max_streams
      - account.max_subscriptions
      - account.JS_max_file
      - account.JS_max_memory
      - system.JS_max_memory
      - system.JS_max_file
      type: string
    AlertRuleType:
      enum:
      - SystemDefault
      - System
      - AccountDefault
      - Account
      - Stream
      - Consumer
      type: string
    AlertRuleUpdateRequest:
      properties:
        duration_in_secs:
          type: integer
        is_enabled:
          type: boolean
        message:
          type: string
        severity:
          $ref: '#/components/schemas/AlertRuleSeverity'
        threshold_expression_metric:
          $ref: '#/components/schemas/AlertRuleThresholdMetric'
        threshold_expression_multiplier:
          type: number
        threshold_fixed_value:
          type: number
        threshold_operator:
          $ref: '#/components/schemas/AlertRuleOperator'
      type: object
    AlertRuleViewResponse:
      properties:
        account_id:
          type: string
        consumer_name:
          type: string
        created:
          format: date-time
          type: string
        duration_in_secs:
          type: integer
        id:
          type: string
        is_enabled:
          type: boolean
        message:
          type: string
        metric:
          type: string
        rule_type:
          $ref: '#/components/schemas/AlertRuleType'
        severity:
          $ref: '#/components/schemas/AlertRuleSeverity'
        stream_name:
          type: string
        system_id:
          type: string
        threshold_expression_metric:
          type: string
        threshold_expression_multiplier:
          type: number
        threshold_fixed_value:
          type: number
        threshold_operator:
          type: string
      required:
      - id
      - created
      - message
      - metric
      - threshold_operator
      - duration_in_secs
      - severity
      - rule_type
      - is_enabled
      type: object
    AlertStatus:
      enum:
      - New
      - Open
      - Closed
      type: string
    AlertViewResponse:
      properties:
        AcknowledgedByAppUserID:
          type: string
        account:
          $ref: '#/components/schemas/AccountInfo'
        account_id:
          type: string
        acknowledged_at:
          format: date-time
          type: string
        alert_rule:
          $ref: '#/components/schemas/AlertRuleViewResponse'
        alert_rule_id:
          type: string
        closed_at:
          format: date-time
          type: string
        consumer_name:
          type: string
        created:
          format: date-time
          type: string
        id:
          type: string
        is_acknowledged:
          type: boolean
        is_closed:
          type: boolean
        is_firing:
          type: boolean
        message:
          type: string
        metric_value:
          format: double
          type: number
        sample_values:
          items:
            $ref: '#/components/schemas/PromSampleValue'
          type: array
        severity:
          $ref: '#/components/schemas/AlertRuleSeverity'
        stream_name:
          type: string
        system:
          $ref: '#/components/schemas/SystemInfo'
        system_id:
          type: string
        threshold_value:
          format: double
          type: number
      required:
      - id
      - alert_rule_id
      - metric_value
      - threshold_value
      - message
      - severity
      - is_acknowledged
      - is_closed
      - created
      - alert_rule
      - is_firing
      - sample_values
      type: object
    ApexCoordinate:
      properties:
        x:
          format: double
          type: number
        "y":
          format: double
          type: number
      required:
      - x
      - "y"
      type: object
    ApexSeries:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ApexCoordinate'
          type: array
        name:
          type: string
      required:
      - name
      - data
      type: object
    AppPolicy:
      properties:
        description:
          type: string
        group:
          $ref: '#/components/schemas/AppPolicyGroup'
        name:
          type: string
        statements:
          additionalProperties:
            $ref: '#/components/schemas/AppPolicyStatement'
          type: object
      required:
      - name
      - statements
      - group
      type: object
    AppPolicyGroup:
      enum:
      - Core
      - Cloud
      - Connectors
      - Workloads
      - SchemaRegistry
      type: string
    AppPolicyStatement:
      properties:
        action:
          items:
            type: string
          type: array
        effect:
          items:
            $ref: '#/components/schemas/AppRoleEffect'
          type: array
        name:
          type: string
        operation_id:
          type: string
        resource:
          items:
            type: string
          type: array
        service:
          type: string
      required:
      - name
      - resource
      - action
      - effect
      type: object
    AppRole:
      properties:
        description:
          type: string
        enabled:
          type: boolean
        id:
          type: string
        name:
          type: string
        policies:
          items:
            type: string
          type: array
        scope:
          $ref: '#/components/schemas/AppRoleScope'
        sort_order:
          type: number
      required:
      - id
      - enabled
      - scope
      - name
      - description
      - policies
      - sort_order
      type: object
    AppRoleEffect:
      enum:
      - ALLOW
      - DENY
      type: string
    AppRoleScope:
      enum:
      - App
      - Team
      - System
      - Account
      - NatsUser
      type: string
    AppUserAccessTokenCreateRequest:
      properties:
        expires:
          format: date-time
          type: string
        name:
          type: string
      required:
      - name
      type: object
    AppUserAccessTokenCreateResponse:
      allOf:
      - $ref: '#/components/schemas/AppUserAccessTokenViewResponse'
      - required:
        - token
      properties:
        token:
          type: string
      type: object
    AppUserAccessTokenListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppUserAccessTokenViewResponse'
          type: array
      required:
      - items
      type: object
    AppUserAccessTokenUpdateRequest:
      properties:
        expires:
          format: date-time
          type: string
        name:
          type: string
      type: object
    AppUserAccessTokenViewResponse:
      properties:
        created:
          format: date-time
          type: string
        expires:
          nullable: true
          type: string
        id:
          type: string
        last_active:
          nullable: true
          type: string
        name:
          type: string
      required:
      - id
      - created
      - name
      type: object
    AppUserAssignListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppUserAssignResponse'
          type: array
      required:
      - items
      type: object
    AppUserAssignRequest:
      properties:
        role_id:
          type: string
      required:
      - role_id
      type: object
    AppUserAssignResponse:
      properties:
        account:
          $ref: '#/components/schemas/AccountInfo'
        app_user:
          $ref: '#/components/schemas/AppUserInfo'
        created:
          format: date-time
          type: string
        nats_user:
          $ref: '#/components/schemas/NatsUserInfo'
        resource_id:
          type: string
        role_id:
          type: string
        role_name:
          type: string
        scope:
          $ref: '#/components/schemas/AppRoleScope'
        system:
          $ref: '#/components/schemas/SystemInfo'
        team:
          $ref: '#/components/schemas/TeamInfo'
        team_app_user:
          $ref: '#/components/schemas/TeamAppUserInfo'
      required:
      - created
      - app_user
      - team_app_user
      - resource_id
      - scope
      - role_name
      - role_id
      type: object
    AppUserCreateRequest:
      properties:
        identifier:
          type: string
        name:
          type: string
        role_id:
          type: string
      required:
      - name
      - identifier
      - role_id
      type: object
    AppUserCreateResponse:
      allOf:
      - $ref: '#/components/schemas/AppUserViewResponse'
      - required:
        - invitation_link
      properties:
        invitation_link:
          type: string
      type: object
    AppUserInfo:
      properties:
        id:
          type: string
        identifier:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/AppUserType'
      required:
      - id
      - name
      - type
      type: object
    AppUserInfoListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppUserInfo'
          type: array
      required:
      - items
      type: object
    AppUserInvitationRequest:
      properties:
        associations:
          items:
            $ref: '#/components/schemas/TeamAppUserAssociation'
          type: array
        identifier:
          type: string
        name:
          type: string
        role_id:
          type: string
      required:
      - identifier
      - name
      - role_id
      type: object
    AppUserInvitationResponse:
      properties:
        app_user:
          $ref: '#/components/schemas/AppUserInfo'
        team_app_user:
          $ref: '#/components/schemas/TeamAppUserInfo'
      required:
      - team_app_user
      - app_user
      type: object
    AppUserListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppUserViewResponse'
          type: array
      required:
      - items
      type: object
    AppUserType:
      enum:
      - Person
      - AppServiceAccount
      - TeamServiceAccount
      type: string
    AppUserUpdateRequest:
      properties:
        name:
          type: string
        reset_password:
          type: boolean
        role_id:
          type: string
      type: object
    AppUserUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/AppUserViewResponse'
      properties:
        reset_password_link:
          type: string
      type: object
    AppUserViewResponse:
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        identifier:
          type: string
        last_active:
          nullable: true
          type: string
        name:
          type: string
        pending_creation:
          type: boolean
        role_id:
          type: string
        role_name:
          type: string
        type:
          $ref: '#/components/schemas/AppUserType'
      required:
      - id
      - created
      - name
      - role_name
      - role_id
      - type
      - pending_creation
      type: object
    AuthCalloutAddTargetAccountRequest:
      properties:
        account_id:
          type: string
        control_account_sk_group_id:
          type: string
        sk_group_id:
          type: string
      required:
      - account_id
      - sk_group_id
      - control_account_sk_group_id
      type: object
    AuthCalloutAddUserRequest:
      properties:
        nats_user_id:
          type: string
      required:
      - nats_user_id
      type: object
    AuthCalloutAuthenticatorComponentConfig:
      properties:
        account:
          type: string
        bucket:
          type: string
      required:
      - account
      - bucket
      type: object
    AuthCalloutAuthenticatorConfigViewResponse:
      properties:
        config:
          type: string
        enabled:
          type: boolean
        id:
          type: string
        type:
          type: string
      required:
      - id
      - type
      - enabled
      - config
      type: object
    AuthCalloutAuthenticatorUpdateRequest:
      properties:
        config:
          type: string
        enabled:
          type: boolean
        type:
          type: string
      required:
      - type
      - enabled
      - config
      type: object
    AuthCalloutAuthenticatorViewResponse:
      properties:
        config_schema:
          items:
            $ref: '#/components/schemas/PlatformComponentsConfigSchema'
          type: array
        id:
          type: string
        type:
          type: string
      required:
      - id
      - type
      type: object
    AuthCalloutAuthenticatorsListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AuthCalloutAuthenticatorViewResponse'
          type: array
      required:
      - items
      type: object
    AuthCalloutComponentConnectConfig:
      properties:
        config_schema:
          items:
            $ref: '#/components/schemas/PlatformComponentsConfigSchema'
          type: array
        type:
          type: string
      required:
      - type
      - config_schema
      type: object
    AuthCalloutConfig:
      properties:
        control_account_id:
          type: string
        id:
          type: string
        system_id:
          type: string
        xkey_public:
          type: string
      required:
      - id
      - system_id
      - control_account_id
      type: object
    AuthCalloutConfigListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AuthCalloutConfig'
          type: array
      required:
      - items
      type: object
    AuthCalloutEnableRequest:
      properties:
        control_account:
          type: string
      required:
      - control_account
      type: object
    AuthCalloutTargetAccountListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AuthCalloutTargetAccountViewResponse'
          type: array
      required:
      - items
      type: object
    AuthCalloutTargetAccountViewResponse:
      properties:
        control_account_sk_group_id:
          type: string
        control_account_sk_group_name:
          type: string
        id:
          type: string
        target_account_id:
          type: string
        target_account_name:
          type: string
        target_account_sk_group_id:
          type: string
        target_account_sk_group_name:
          type: string
      required:
      - id
      - target_account_id
      - target_account_name
      - target_account_sk_group_id
      - target_account_sk_group_name
      - control_account_sk_group_id
      - control_account_sk_group_name
      type: object
    AuthCalloutUserViewResponse:
      properties:
        id:
          type: string
        name:
          type: string
        nats_user_id:
          type: string
      required:
      - id
      - nats_user_id
      - name
      type: object
    AuthCalloutUsersListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AuthCalloutUserViewResponse'
          type: array
      required:
      - items
      type: object
    AuthCalloutViewResponse:
      allOf:
      - $ref: '#/components/schemas/AuthCalloutConfig'
      properties:
        authenticators:
          items:
            $ref: '#/components/schemas/AuthCalloutAuthenticatorConfigViewResponse'
          type: array
        target_accounts:
          items:
            $ref: '#/components/schemas/AuthCalloutTargetAccountViewResponse'
          type: array
        users:
          items:
            $ref: '#/components/schemas/AuthCalloutUserViewResponse'
          type: array
      type: object
    AuthzRequest:
      properties:
        resource_id:
          default: ""
          type: string
        service:
          type: string
      required:
      - service
      - resource_id
      type: object
    AuthzResponse:
      properties:
        operations:
          items:
            type: string
          type: array
        resource_id:
          type: string
        service:
          type: string
      required:
      - service
      - resource_id
      - operations
      type: object
    AuthzViewRequest:
      items:
        $ref: '#/components/schemas/AuthzRequest'
      type: array
    AuthzViewResponse:
      items:
        $ref: '#/components/schemas/AuthzResponse'
      type: array
    AvailableChartVersion:
      properties:
        app_version:
          type: string
        chart:
          type: string
        repo:
          type: string
        type:
          type: string
        version:
          type: string
      required:
      - version
      - app_version
      - chart
      - repo
      - type
      type: object
    AvailableChartVersions:
      items:
        $ref: '#/components/schemas/AvailableChartVersion'
      type: array
    AvailableComponentVersionsRequest:
      properties:
        deployment_type:
          type: string
        major:
          default: -1
          maximum: 9223372036854776000
          minimum: -1
          type: integer
        minor:
          default: -1
          maximum: 9223372036854776000
          minimum: -1
          type: integer
      required:
      - major
      - minor
      type: object
    AvailableComponentVersionsResponse:
      additionalProperties:
        $ref: '#/components/schemas/AvailableChartVersions'
      type: object
    BulkShareRequest:
      properties:
        id:
          type: string
        target_accounts:
          items:
            $ref: '#/components/schemas/BulkShareTarget'
          type: array
        type:
          $ref: '#/components/schemas/BulkShareType'
      required:
      - id
      - type
      - target_accounts
      type: object
    BulkShareTarget:
      properties:
        auto_accept:
          default: false
          type: boolean
        id:
          type: string
        local_subject:
          type: string
      required:
      - id
      - auto_accept
      - local_subject
      type: object
    BulkShareType:
      enum:
      - stream
      - subject
      type: string
    ClaimType:
      description: ClaimType is used to indicate the type of JWT being stored in a
        Claim
      type: string
    ClaimsData:
      description: ClaimsData is the base struct for all claims
      properties:
        aud:
          type: string
        exp:
          format: int64
          type: integer
        iat:
          format: int64
          type: integer
        iss:
          type: string
        jti:
          type: string
        name:
          type: string
        nbf:
          format: int64
          type: integer
        sub:
          type: string
      type: object
    ClusterChartType:
      enum:
      - NumConnections
      - NumSubscriptions
      - CPUUsage
      - MemoryUsage
      - NumSlowConsumer
      - BytesSent
      - BytesReceived
      - NumMessagesSent
      - NumMessagesReceived
      - GatewayBytesSent
      - GatewayBytesReceived
      - GatewayNumMessagesSent
      - GatewayNumMessagesReceived
      - RouteBytesSent
      - RouteBytesReceived
      - RouteNumMessagesSent
      - RouteNumMessagesReceived
      - RouteBytesPending
      type: string
    ClusterInfo:
      description: |-
        ClusterInfo shows information about the underlying set of servers
        that make up the stream or consumer.
      properties:
        leader:
          type: string
        name:
          type: string
        replicas:
          items:
            allOf:
            - $ref: '#/components/schemas/PeerInfo'
            nullable: true
            type: object
          type: array
      type: object
    Compression:
      $ref: '#/components/schemas/S2Compression'
    ConnInfo:
      description: ConnInfo has detailed information on a per connection basis.
      properties:
        account:
          type: string
        authorized_user:
          type: string
        cid:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        idle:
          type: string
        in_bytes:
          format: int64
          type: integer
        in_msgs:
          format: int64
          type: integer
        ip:
          type: string
        issuer_key:
          type: string
        jwt:
          type: string
        kind:
          type: string
        lang:
          type: string
        last_activity:
          format: date-time
          type: string
        mqtt_client:
          type: string
        name:
          type: string
        name_tag:
          type: string
        out_bytes:
          format: int64
          type: integer
        out_msgs:
          format: int64
          type: integer
        pending_bytes:
          type: integer
        port:
          type: integer
        reason:
          type: string
        rtt:
          type: string
        start:
          format: date-time
          type: string
        stop:
          nullable: true
          type: string
        subscriptions:
          maximum: 4294967295
          minimum: 0
          type: integer
        subscriptions_list:
          items:
            type: string
          type: array
        subscriptions_list_detail:
          items:
            $ref: '#/components/schemas/SubDetail'
          type: array
        tags:
          items:
            type: string
          type: array
        tls_cipher_suite:
          type: string
        tls_peer_certs:
          items:
            allOf:
            - $ref: '#/components/schemas/TLSPeerCert'
            nullable: true
            type: object
          type: array
        tls_version:
          type: string
        type:
          type: string
        uptime:
          type: string
        version:
          type: string
      required:
      - cid
      - ip
      - port
      - start
      - last_activity
      - uptime
      - idle
      - pending_bytes
      - in_msgs
      - out_msgs
      - in_bytes
      - out_bytes
      - subscriptions
      type: object
    ConnectorComponentConstraint:
      properties:
        enum:
          items:
            type: string
          type: array
        preset:
          type: string
        range:
          $ref: '#/components/schemas/ConnectorComponentRange'
        regex:
          type: string
      type: object
    ConnectorComponentField:
      properties:
        constraints:
          items:
            $ref: '#/components/schemas/ConnectorComponentConstraint'
          type: array
        default: {}
        description:
          type: string
        examples:
          items: {}
          type: array
        fields:
          items:
            $ref: '#/components/schemas/ConnectorComponentField'
          type: array
        kind:
          $ref: '#/components/schemas/ConnectorComponentFieldKind'
        label:
          type: string
        name:
          type: string
        optional:
          type: boolean
        render_hint:
          type: string
        secret:
          type: boolean
        type:
          $ref: '#/components/schemas/ConnectorComponentFieldType'
      required:
      - name
      - label
      - kind
      - type
      - description
      type: object
    ConnectorComponentFieldKind:
      enum:
      - scalar
      - map
      - list
      type: string
    ConnectorComponentFieldType:
      enum:
      - bool
      - int
      - object
      - scanner
      - string
      - expression
      - condition
      type: string
    ConnectorComponentKind:
      description: -- Library
      enum:
      - source
      - sink
      - scanner
      type: string
    ConnectorComponentRange:
      properties:
        gt:
          type: number
        gte:
          type: number
        lt:
          type: number
        lte:
          type: number
      type: object
    ConnectorComponentStatus:
      enum:
      - deprecated
      - experimental
      - preview
      - stable
      type: string
    ConnectorComponentSummary:
      properties:
        icon:
          type: string
        kind:
          $ref: '#/components/schemas/ConnectorComponentKind'
        label:
          type: string
        name:
          type: string
        runtime_id:
          type: string
        status:
          $ref: '#/components/schemas/ConnectorComponentStatus'
        version_id:
          type: string
      required:
      - runtime_id
      - version_id
      - name
      - label
      - kind
      - status
      type: object
    ConnectorComponentSummaryListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ConnectorComponentSummary'
          type: array
      required:
      - items
      type: object
    ConnectorComponentViewResponse:
      properties:
        description:
          type: string
        fields:
          items:
            $ref: '#/components/schemas/ConnectorComponentField'
          type: array
        icon:
          type: string
        kind:
          $ref: '#/components/schemas/ConnectorComponentKind'
        label:
          type: string
        name:
          type: string
        runtime_id:
          type: string
        status:
          type: string
        version_id:
          type: string
      required:
      - runtime_id
      - version_id
      - name
      - label
      - kind
      - status
      - description
      type: object
    ConnectorConfig:
      properties:
        description:
          type: string
        metrics:
          $ref: '#/components/schemas/ConnectorMetricEndpoint'
        steps:
          $ref: '#/components/schemas/ConnectorSteps'
        workload:
          type: string
      type: object
    ConnectorConsumer:
      properties:
        core:
          properties:
            queue:
              type: string
            subject:
              type: string
          required:
          - subject
          type: object
        kv:
          properties:
            bucket:
              type: string
            key:
              type: string
          required:
          - bucket
          type: object
        nats_config:
          $ref: '#/components/schemas/ConnectorNatsConfig'
        stream:
          properties:
            subject:
              type: string
          required:
          - subject
          type: object
      required:
      - nats_config
      type: object
    ConnectorConsumerPatch:
      properties:
        core:
          nullable: true
          properties:
            queue:
              type: string
            subject:
              type: string
          type: object
        kv:
          nullable: true
          properties:
            bucket:
              type: string
            key:
              type: string
          type: object
        nats_config:
          $ref: '#/components/schemas/ConnectorNatsConfigPatch'
        stream:
          nullable: true
          properties:
            subject:
              type: string
          type: object
      type: object
    ConnectorCreateRequest:
      properties:
        config:
          $ref: '#/components/schemas/ConnectorConfig'
        connector_id:
          type: string
        deploy:
          allOf:
          - $ref: '#/components/schemas/ConnectorDeployRequest'
          nullable: true
          type: object
      required:
      - connector_id
      - config
      type: object
    ConnectorDeployRequest:
      properties:
        env_vars:
          additionalProperties:
            type: string
          type: object
        placement_tags:
          items:
            type: string
          type: array
        pull:
          type: boolean
        replicas:
          type: integer
        timeout:
          type: string
      required:
      - replicas
      - timeout
      - env_vars
      - placement_tags
      - pull
      type: object
    ConnectorDeploymentViewResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ConnectorInstanceViewResponse'
          type: array
      required:
      - items
      type: object
    ConnectorExecutionLog:
      properties:
        connector_id:
          type: string
        instance_id:
          type: string
        line:
          type: string
        timestamp:
          type: string
      required:
      - connector_id
      - instance_id
      - timestamp
      - line
      type: object
    ConnectorExecutionLogListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ConnectorExecutionLog'
          type: array
      required:
      - items
      type: object
    ConnectorInstanceEvent:
      properties:
        connector_id:
          type: string
        error:
          type: string
        exit_code:
          type: integer
        instance_id:
          type: string
        timestamp:
          type: string
        type:
          $ref: '#/components/schemas/ConnectorInstanceEventType'
      required:
      - connector_id
      - instance_id
      - timestamp
      - type
      type: object
    ConnectorInstanceEventListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ConnectorInstanceEvent'
          type: array
      required:
      - items
      type: object
    ConnectorInstanceEventType:
      enum:
      - scheduled
      - created
      - running
      - stopped
      - failed
      type: string
    ConnectorInstanceListResponse:
      description: -- Instance
      properties:
        items:
          items:
            $ref: '#/components/schemas/ConnectorInstanceViewResponse'
          type: array
      required:
      - items
      type: object
    ConnectorInstanceViewResponse:
      properties:
        connector_id:
          type: string
        instance_id:
          type: string
      required:
      - connector_id
      - instance_id
      type: object
    ConnectorKind:
      description: -- Control
      enum:
      - inlet
      - outlet
      - unknown
      type: string
    ConnectorListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ConnectorSummary'
          type: array
      required:
      - items
      type: object
    ConnectorMetricChartResponse:
      properties:
        ConnectorsInputConnectionFailed:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsInputConnectionLost:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsInputConnectionUp:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsInputLatencyNs:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsInputLatencyNsCount:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsInputLatencyNsSum:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsInputReceived:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsOutputBatchSent:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsOutputConnectionFailed:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsOutputConnectionLost:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsOutputConnectionUp:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsOutputError:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsOutputLatencyNs:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsOutputLatencyNsCount:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsOutputLatencyNsSum:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        ConnectorsOutputSent:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
      type: object
    ConnectorMetricChartTypes:
      enum:
      - ConnectorsInputConnectionFailed
      - ConnectorsInputConnectionLost
      - ConnectorsInputConnectionUp
      - ConnectorsInputLatencyNs
      - ConnectorsInputLatencyNsSum
      - ConnectorsInputLatencyNsCount
      - ConnectorsInputReceived
      - ConnectorsOutputBatchSent
      - ConnectorsOutputConnectionFailed
      - ConnectorsOutputConnectionLost
      - ConnectorsOutputConnectionUp
      - ConnectorsOutputError
      - ConnectorsOutputLatencyNs
      - ConnectorsOutputLatencyNsSum
      - ConnectorsOutputLatencyNsCount
      - ConnectorsOutputSent
      type: string
    ConnectorMetricEndpoint:
      properties:
        path:
          type: string
        port:
          type: integer
      type: object
    ConnectorMetricEndpointPatch:
      properties:
        path:
          type: string
        port:
          type: integer
      type: object
    ConnectorNatsConfig:
      properties:
        nats_user_id:
          type: string
        url:
          type: string
      required:
      - url
      type: object
    ConnectorNatsConfigPatch:
      properties:
        nats_user_id:
          nullable: true
          type: string
        url:
          type: string
      type: object
    ConnectorProducer:
      properties:
        core:
          properties:
            subject:
              type: string
          required:
          - subject
          type: object
        kv:
          properties:
            bucket:
              type: string
            key:
              type: string
          required:
          - bucket
          - key
          type: object
        nats_config:
          $ref: '#/components/schemas/ConnectorNatsConfig'
        stream:
          properties:
            subject:
              type: string
          required:
          - subject
          type: object
        threads:
          type: integer
      required:
      - nats_config
      type: object
    ConnectorProducerPatch:
      properties:
        core:
          nullable: true
          properties:
            subject:
              type: string
          type: object
        kv:
          nullable: true
          properties:
            bucket:
              type: string
            key:
              type: string
          type: object
        nats_config:
          $ref: '#/components/schemas/ConnectorNatsConfigPatch'
        stream:
          nullable: true
          properties:
            subject:
              type: string
          type: object
        threads:
          nullable: true
          type: integer
      type: object
    ConnectorSink:
      properties:
        config: {}
        type:
          type: string
      required:
      - type
      - config
      type: object
    ConnectorSinkPatch:
      properties:
        config: {}
        type:
          type: string
      type: object
    ConnectorSource:
      properties:
        config: {}
        type:
          type: string
      required:
      - type
      - config
      type: object
    ConnectorSourcePatch:
      properties:
        config: {}
        type:
          type: string
      type: object
    ConnectorSteps:
      properties:
        consumer:
          $ref: '#/components/schemas/ConnectorConsumer'
        producer:
          $ref: '#/components/schemas/ConnectorProducer'
        sink:
          $ref: '#/components/schemas/ConnectorSink'
        source:
          $ref: '#/components/schemas/ConnectorSource'
        transformer:
          $ref: '#/components/schemas/ConnectorTransformer'
      type: object
    ConnectorStepsPatch:
      properties:
        consumer:
          allOf:
          - $ref: '#/components/schemas/ConnectorConsumerPatch'
          nullable: true
          type: object
        producer:
          allOf:
          - $ref: '#/components/schemas/ConnectorProducerPatch'
          nullable: true
          type: object
        sink:
          allOf:
          - $ref: '#/components/schemas/ConnectorSinkPatch'
          nullable: true
          type: object
        source:
          allOf:
          - $ref: '#/components/schemas/ConnectorSourcePatch'
          nullable: true
          type: object
        transformer:
          allOf:
          - $ref: '#/components/schemas/ConnectorTransformerPatch'
          nullable: true
          type: object
      type: object
    ConnectorSummary:
      properties:
        description:
          type: string
        id:
          type: string
        instances:
          $ref: '#/components/schemas/ConnectorSummaryInstances'
        runtime_id:
          type: string
      required:
      - id
      - description
      - instances
      - runtime_id
      type: object
    ConnectorSummaryInstances:
      properties:
        pending:
          type: integer
        running:
          type: integer
        stopped:
          type: integer
      required:
      - pending
      - running
      - stopped
      type: object
    ConnectorTransformer:
      properties:
        composite:
          properties:
            sequential:
              $ref: '#/components/schemas/ConnectorsTransformers'
          required:
          - sequential
          type: object
        kind:
          $ref: '#/components/schemas/ConnectorTransformerKind'
        mapping:
          properties:
            sourcecode:
              type: string
          required:
          - sourcecode
          type: object
        service:
          properties:
            endpoint:
              type: string
            nats_config:
              $ref: '#/components/schemas/ConnectorNatsConfig'
            timeout:
              type: string
          required:
          - endpoint
          - nats_config
          - timeout
          type: object
      required:
      - kind
      type: object
    ConnectorTransformerKind:
      enum:
      - mapping
      - composite
      - service
      type: string
    ConnectorTransformerPatch:
      properties:
        composite:
          nullable: true
          properties:
            sequential:
              $ref: '#/components/schemas/ConnectorsTransformers'
          type: object
        kind:
          $ref: '#/components/schemas/ConnectorTransformerKind'
        mapping:
          nullable: true
          properties:
            sourcecode:
              type: string
          type: object
        service:
          nullable: true
          properties:
            endpoint:
              type: string
            nats_config:
              $ref: '#/components/schemas/ConnectorNatsConfigPatch'
            timeout:
              type: string
          type: object
      type: object
    ConnectorUpdateRequest:
      properties:
        description:
          type: string
        metrics:
          allOf:
          - $ref: '#/components/schemas/ConnectorMetricEndpointPatch'
          nullable: true
          type: object
        steps:
          allOf:
          - $ref: '#/components/schemas/ConnectorStepsPatch'
          nullable: true
          type: object
        workload:
          type: string
      type: object
    ConnectorViewResponse:
      oneOf:
      - properties:
          kind:
            enum:
            - inlet
            type: string
          producer:
            $ref: '#/components/schemas/ConnectorProducer'
          source:
            $ref: '#/components/schemas/ConnectorSource'
        required:
        - kind
        - source
        - producer
      - properties:
          consumer:
            $ref: '#/components/schemas/ConnectorConsumer'
          kind:
            enum:
            - outlet
            type: string
          sink:
            $ref: '#/components/schemas/ConnectorSink'
        required:
        - kind
        - consumer
        - sink
      properties:
        description:
          description: Config
          type: string
        id:
          type: string
        is_active:
          type: boolean
        kind:
          $ref: '#/components/schemas/ConnectorKind'
        metrics:
          $ref: '#/components/schemas/ConnectorMetricEndpoint'
        revision:
          type: integer
        steps:
          $ref: '#/components/schemas/ConnectorSteps'
        workload:
          type: string
      required:
      - kind
      - id
      - revision
      type: object
    ConnectorsPlatformComponentConfig:
      properties:
        account:
          type: string
      required:
      - account
      type: object
    ConnectorsTransformers:
      items:
        $ref: '#/components/schemas/ConnectorTransformer'
      type: array
    Connz:
      description: Connz represents detailed information on current client connections.
      properties:
        connections:
          items:
            allOf:
            - $ref: '#/components/schemas/ConnInfo'
            nullable: true
            type: object
          type: array
        limit:
          type: integer
        now:
          format: date-time
          type: string
        num_connections:
          type: integer
        offset:
          type: integer
        server_id:
          type: string
        total:
          type: integer
      required:
      - server_id
      - now
      - num_connections
      - total
      - offset
      - limit
      - connections
      type: object
    ConsumerConfig:
      description: |-
        ConsumerConfig is the configuration for a JetStream consumes

        NATS Schema Type io.nats.jetstream.api.v1.consumer_configuration
      properties:
        ack_policy:
          $ref: '#/components/schemas/AckPolicy'
        ack_wait:
          format: int64
          type: integer
        backoff:
          items:
            format: int64
            type: integer
          type: array
        deliver_group:
          type: string
        deliver_policy:
          $ref: '#/components/schemas/DeliverPolicy'
        deliver_subject:
          type: string
        description:
          type: string
        direct:
          description: Don't add to general clients.
          type: boolean
        durable_name:
          type: string
        filter_subject:
          type: string
        filter_subjects:
          items:
            type: string
          type: array
        flow_control:
          type: boolean
        headers_only:
          type: boolean
        idle_heartbeat:
          format: int64
          type: integer
        inactive_threshold:
          format: int64
          type: integer
        max_ack_pending:
          type: integer
        max_batch:
          type: integer
        max_bytes:
          type: integer
        max_deliver:
          type: integer
        max_expires:
          format: int64
          type: integer
        max_waiting:
          type: integer
        mem_storage:
          type: boolean
        metadata:
          additionalProperties:
            type: string
          description: Metadata is additional metadata for the Consumer.
          type: object
        name:
          type: string
        num_replicas:
          type: integer
        opt_start_seq:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        opt_start_time:
          nullable: true
          type: string
        rate_limit_bps:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        replay_policy:
          $ref: '#/components/schemas/ReplayPolicy'
        sample_freq:
          type: string
      required:
      - ack_policy
      - deliver_policy
      - replay_policy
      - num_replicas
      type: object
    ConsumerInfo:
      description: ConsumerInfo reports the current state of a consumer
      properties:
        ack_floor:
          $ref: '#/components/schemas/SequenceInfo'
        cluster:
          allOf:
          - $ref: '#/components/schemas/ClusterInfo'
          nullable: true
          type: object
        config:
          $ref: '#/components/schemas/ConsumerConfig'
        created:
          format: date-time
          type: string
        delivered:
          $ref: '#/components/schemas/SequenceInfo'
        name:
          type: string
        num_ack_pending:
          type: integer
        num_pending:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        num_redelivered:
          type: integer
        num_waiting:
          type: integer
        push_bound:
          type: boolean
        stream_name:
          type: string
        ts:
          format: date-time
          type: string
      required:
      - stream_name
      - name
      - config
      - created
      - delivered
      - ack_floor
      - num_ack_pending
      - num_redelivered
      - num_waiting
      - num_pending
      - ts
      type: object
    DataLimits:
      properties:
        bytes_recv:
          format: int64
          type: integer
        bytes_sent:
          format: int64
          type: integer
      required:
      - bytes_sent
      - bytes_recv
      type: object
    DataStats:
      description: DataStats reports how may msg and bytes. Applicable for both sent
        and received.
      properties:
        bytes:
          format: int64
          type: integer
        msgs:
          format: int64
          type: integer
      required:
      - msgs
      - bytes
      type: object
    DeliverPolicy:
      enum:
      - all
      - last
      - new
      - by_start_sequence
      - by_start_time
      - last_per_subject
      type: string
    DiscardPolicy:
      description: enums have been changed to match UnmarshalJSON in https://github.com/nats-io/jsm.go/blob/main/api/streams.go
      enum:
      - old
      - new
      type: string
    Export:
      allOf:
      - $ref: '#/components/schemas/Info'
      description: Export represents a single export
      properties:
        account_token_position:
          minimum: 0
          type: integer
        advertise:
          type: boolean
        name:
          type: string
        response_threshold:
          format: int64
          type: integer
        response_type:
          $ref: '#/components/schemas/ResponseType'
        revocations:
          $ref: '#/components/schemas/RevocationList'
        service_latency:
          $ref: '#/components/schemas/ServiceLatency'
        subject:
          type: string
        token_req:
          type: boolean
        type:
          $ref: '#/components/schemas/ExportType'
      type: object
    ExportPatch:
      properties:
        account_token_position:
          minimum: 0
          nullable: true
          type: integer
        advertise:
          type: boolean
        description:
          nullable: true
          type: string
        info_url:
          nullable: true
          type: string
        name:
          type: string
        response_threshold:
          maximum: 9223372036854776000
          minimum: -9.223372036854776e+18
          nullable: true
          type: integer
        response_type:
          $ref: '#/components/schemas/ResponseType'
        revocations:
          allOf:
          - $ref: '#/components/schemas/RevocationListPatch'
          nullable: true
          type: object
        service_latency:
          allOf:
          - $ref: '#/components/schemas/ServiceLatencyPatch'
          nullable: true
          type: object
        subject:
          type: string
        token_req:
          type: boolean
        type:
          $ref: '#/components/schemas/ExportType'
      type: object
    ExportType:
      description: ExportType defines the type of import/export.
      enum:
      - stream
      - service
      type: string
    Exports:
      description: Exports is a slice of exports
      items:
        $ref: '#/components/schemas/Export'
      type: array
    ExternalAuthorization:
      properties:
        allowed_accounts:
          items:
            type: string
          type: array
        auth_users:
          items:
            type: string
          nullable: true
          type: array
        xkey:
          type: string
      required:
      - auth_users
      type: object
    ExternalAuthorizationPatch:
      properties:
        allowed_accounts:
          items:
            type: string
          nullable: true
          type: array
        auth_users:
          items:
            type: string
          nullable: true
          type: array
        xkey:
          type: string
      type: object
    ExternalStream:
      description: ExternalStream allows you to qualify access to a stream source
        in another account.
      properties:
        api:
          type: string
        deliver:
          type: string
      required:
      - api
      - deliver
      type: object
    GatewayStat:
      description: GatewayStat holds gateway statistics.
      properties:
        gwid:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        inbound_connections:
          type: integer
        name:
          type: string
        received:
          $ref: '#/components/schemas/DataStats'
        sent:
          $ref: '#/components/schemas/DataStats'
      required:
      - gwid
      - name
      - sent
      - received
      - inbound_connections
      type: object
    GenericFields:
      properties:
        tags:
          items:
            type: string
          type: array
        type:
          $ref: '#/components/schemas/ClaimType'
        version:
          type: integer
      type: object
    GetResponse:
      properties:
        schema:
          allOf:
          - $ref: '#/components/schemas/Schema'
          nullable: true
          type: object
      type: object
    HttpGatewayPlatformComponentConfig:
      properties:
        account:
          type: string
        token_bucket:
          type: string
        url:
          type: string
      required:
      - account
      - token_bucket
      - url
      type: object
    Import:
      description: Import describes a mapping from another account into this one
      properties:
        account:
          type: string
        local_subject:
          description: |-
            Local subject used to subscribe (for streams) and publish (for services) to.
            This value only needs setting if you want to change the value of Subject.
            If the value of Subject ends in > then LocalSubject needs to end in > as well.
            LocalSubject can contain $<number> wildcard references where number references the nth wildcard in Subject.
            The sum of wildcard reference and * tokens needs to match the number of * token in Subject.
          type: string
        name:
          type: string
        share:
          type: boolean
        subject:
          description: |-
            Subject field in an import is always from the perspective of the
            initial publisher - in the case of a stream it is the account owning
            the stream (the exporter), and in the case of a service it is the
            account making the request (the importer).
          type: string
        to:
          description: |-
            Deprecated: use LocalSubject instead
            To field in an import is always from the perspective of the subscriber
            in the case of a stream it is the client of the stream (the importer),
            from the perspective of a service, it is the subscription waiting for
            requests (the exporter). If the field is empty, it will default to the
            value in the Subject field.
          type: string
        token:
          type: string
        type:
          $ref: '#/components/schemas/ExportType'
      type: object
    ImportPatch:
      properties:
        account:
          type: string
        local_subject:
          nullable: true
          type: string
        name:
          type: string
        share:
          type: boolean
        subject:
          type: string
        to:
          nullable: true
          type: string
        token:
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/ExportType'
      type: object
    Imports:
      description: Imports is a list of import structs
      items:
        $ref: '#/components/schemas/Import'
      type: array
    Info:
      properties:
        description:
          type: string
        info_url:
          type: string
      type: object
    InvitationDecisionRequest:
      properties:
        accept:
          type: boolean
      required:
      - accept
      type: object
    InvitationListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/TeamInfo'
          type: array
      required:
      - items
      type: object
    JSAcctStats:
      $ref: '#/components/schemas/JetStreamAccountStats'
    JSApiError:
      properties:
        code:
          type: integer
        description:
          type: string
        err_code:
          maximum: 65535
          minimum: 0
          type: integer
      required:
      - code
      type: object
    JSCommonConsumerConfigRequest:
      properties:
        ack_policy:
          $ref: '#/components/schemas/AckPolicy'
        ack_wait:
          format: int64
          type: integer
        backoff:
          items:
            format: int64
            type: integer
          type: array
        deliver_policy:
          $ref: '#/components/schemas/DeliverPolicy'
        description:
          type: string
        direct:
          type: boolean
        durable_name:
          type: string
        filter_subjects:
          items:
            type: string
          type: array
        inactive_threshold:
          format: int64
          type: integer
        max_ack_pending:
          type: integer
        max_deliver:
          type: integer
        mem_storage:
          type: boolean
        name:
          type: string
        num_replicas:
          type: integer
        opt_start_seq:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        opt_start_time:
          format: date-time
          type: string
        replay_policy:
          $ref: '#/components/schemas/ReplayPolicy'
        sample_freq:
          type: string
      required:
      - deliver_policy
      - ack_policy
      - replay_policy
      - num_replicas
      type: object
    JSCommonStreamConfig:
      properties:
        allow_direct:
          type: boolean
        allow_rollup_hdrs:
          type: boolean
        compression:
          $ref: '#/components/schemas/Compression'
        deny_delete:
          type: boolean
        deny_purge:
          type: boolean
        description:
          type: string
        discard:
          $ref: '#/components/schemas/DiscardPolicy'
        discard_new_per_subject:
          type: boolean
        duplicate_window:
          format: int64
          type: integer
        first_seq:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        max_age:
          format: int64
          type: integer
        max_bytes:
          format: int64
          type: integer
        max_consumers:
          type: integer
        max_msg_size:
          format: int32
          type: integer
        max_msgs:
          format: int64
          type: integer
        max_msgs_per_subject:
          format: int64
          type: integer
        metadata:
          additionalProperties:
            type: string
          type: object
        name:
          type: string
        no_ack:
          type: boolean
        num_replicas:
          type: integer
        placement:
          $ref: '#/components/schemas/Placement'
        republish:
          $ref: '#/components/schemas/RePublish'
        retention:
          $ref: '#/components/schemas/RetentionPolicy'
        sealed:
          type: boolean
        sources:
          items:
            $ref: '#/components/schemas/StreamSource'
          type: array
        storage:
          $ref: '#/components/schemas/StorageType'
        subject_transform:
          $ref: '#/components/schemas/SubjectTransformConfig'
        template_owner:
          type: string
      required:
      - name
      - retention
      - max_consumers
      - max_msgs_per_subject
      - max_msgs
      - max_bytes
      - max_age
      - storage
      - discard
      - num_replicas
      - sealed
      - deny_delete
      - deny_purge
      - allow_rollup_hdrs
      - allow_direct
      type: object
    JSCommonStreamInfo:
      properties:
        alternates:
          items:
            $ref: '#/components/schemas/StreamAlternate'
          type: array
        cluster:
          $ref: '#/components/schemas/ClusterInfo'
        created:
          format: date-time
          type: string
        sources:
          items:
            $ref: '#/components/schemas/StreamSourceInfo'
          type: array
        state:
          $ref: '#/components/schemas/StreamState'
      required:
      - created
      - state
      type: object
    JSConsumerInfoListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/JSConsumerInfoResponse'
          type: array
      required:
      - items
      type: object
    JSConsumerInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ConsumerInfo'
      - required:
        - id
        - consumer_type
      properties:
        consumer_type:
          $ref: '#/components/schemas/JSConsumerType'
        id:
          type: string
      type: object
    JSConsumerType:
      enum:
      - push
      - pull
      type: string
    JSKVBucketConfig:
      properties:
        bucket:
          type: string
        compression:
          default: false
          type: boolean
        description:
          type: string
        history:
          default: 1
          maximum: 255
          minimum: 0
          type: integer
        max_age:
          format: int64
          type: integer
        max_bytes:
          format: int64
          type: integer
        max_value_size:
          format: int32
          type: integer
        mirror:
          $ref: '#/components/schemas/StreamSource'
        num_replicas:
          default: 1
          type: integer
        placement:
          $ref: '#/components/schemas/Placement'
        republish:
          $ref: '#/components/schemas/RePublish'
        sources:
          items:
            $ref: '#/components/schemas/StreamSource'
          type: array
        storage:
          $ref: '#/components/schemas/StorageType'
      required:
      - bucket
      - storage
      type: object
    JSKVBucketListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/JSKVBucketViewResponse'
          type: array
      required:
      - items
      type: object
    JSKVBucketUpdateRequest:
      properties:
        config:
          $ref: '#/components/schemas/UpdatableKVBucketConfig'
      required:
      - config
      type: object
    JSKVBucketViewResponse:
      properties:
        bytes:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        config:
          $ref: '#/components/schemas/JSKVBucketConfig'
        id:
          type: string
        num_values:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        stream_name:
          type: string
      required:
      - id
      - stream_name
      - bytes
      - num_values
      - config
      type: object
    JSMirrorConfigRequest:
      allOf:
      - $ref: '#/components/schemas/JSCommonStreamConfig'
      - required:
        - mirror
        - mirror_direct
      properties:
        mirror:
          $ref: '#/components/schemas/StreamSource'
        mirror_direct:
          type: boolean
      type: object
    JSMirrorConfigResponse:
      $ref: '#/components/schemas/JSMirrorConfigRequest'
    JSMirrorInfoListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/JSMirrorInfoResponse'
          type: array
      required:
      - items
      type: object
    JSMirrorInfoResponse:
      allOf:
      - $ref: '#/components/schemas/JSCommonStreamInfo'
      - required:
        - id
        - config
        - shared
      properties:
        config:
          $ref: '#/components/schemas/JSMirrorConfigRequest'
        id:
          type: string
        mirror:
          $ref: '#/components/schemas/StreamSourceInfo'
        shared:
          type: boolean
      type: object
    JSObjectBucketConfig:
      allOf:
      - $ref: '#/components/schemas/ObjectStoreConfig'
      properties:
        storage:
          $ref: '#/components/schemas/StorageType'
      type: object
    JSObjectBucketListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/JSObjectBucketViewResponse'
          type: array
      required:
      - items
      type: object
    JSObjectBucketUpdateRequest:
      properties:
        config:
          $ref: '#/components/schemas/UpdatableObjectBucketConfig'
        really_sealed:
          type: boolean
        sealed:
          type: boolean
      required:
      - config
      type: object
    JSObjectBucketViewResponse:
      properties:
        bytes:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        config:
          $ref: '#/components/schemas/JSObjectBucketConfig'
        id:
          type: string
        stream_name:
          type: string
      required:
      - id
      - stream_name
      - bytes
      - config
      type: object
    JSPlacementOptionsResponse:
      properties:
        clusters:
          items:
            type: string
          type: array
        num_replicas:
          items:
            type: integer
          type: array
        tags:
          items:
            type: string
          type: array
      required:
      - clusters
      - num_replicas
      - tags
      type: object
    JSPullConsumerConfigRequest:
      allOf:
      - $ref: '#/components/schemas/JSCommonConsumerConfigRequest'
      properties:
        max_batch:
          type: integer
        max_bytes:
          type: integer
        max_expires:
          format: int64
          type: integer
        max_waiting:
          description: Pull based options.
          type: integer
      type: object
    JSPullConsumerInfoResponse:
      properties:
        ack_floor:
          $ref: '#/components/schemas/SequenceInfo'
        cluster:
          $ref: '#/components/schemas/ClusterInfo'
        config:
          $ref: '#/components/schemas/JSPullConsumerConfigRequest'
        created:
          format: date-time
          type: string
        delivered:
          $ref: '#/components/schemas/SequenceInfo'
        id:
          type: string
        name:
          type: string
        num_ack_pending:
          type: integer
        num_pending:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        num_redelivered:
          type: integer
        num_waiting:
          type: integer
        stream_name:
          type: string
      required:
      - id
      - stream_name
      - name
      - created
      - delivered
      - ack_floor
      - num_ack_pending
      - num_redelivered
      - num_waiting
      - num_pending
      type: object
    JSPullConsumerUpdateRequest:
      properties:
        ack_wait:
          format: int64
          type: integer
        description:
          type: string
        max_ack_pending:
          type: integer
        max_deliver:
          type: integer
        sample_freq:
          type: string
      type: object
    JSPushConsumerConfigRequest:
      allOf:
      - $ref: '#/components/schemas/JSCommonConsumerConfigRequest'
      properties:
        deliver_group:
          type: string
        deliver_subject:
          description: Push based options.
          type: string
        flow_control:
          type: boolean
        headers_only:
          type: boolean
        idle_heartbeat:
          format: int64
          type: integer
        rate_limit_bps:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
      type: object
    JSPushConsumerInfoResponse:
      properties:
        ack_floor:
          $ref: '#/components/schemas/SequenceInfo'
        cluster:
          $ref: '#/components/schemas/ClusterInfo'
        config:
          $ref: '#/components/schemas/JSPushConsumerConfigRequest'
        created:
          format: date-time
          type: string
        delivered:
          $ref: '#/components/schemas/SequenceInfo'
        id:
          type: string
        name:
          type: string
        num_ack_pending:
          type: integer
        num_pending:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        num_redelivered:
          type: integer
        push_bound:
          type: boolean
        stream_name:
          type: string
      required:
      - id
      - stream_name
      - name
      - created
      - delivered
      - ack_floor
      - num_ack_pending
      - num_redelivered
      - num_pending
      type: object
    JSPushConsumerUpdateRequest:
      properties:
        ack_wait:
          format: int64
          type: integer
        description:
          type: string
        headers_only:
          type: boolean
        max_ack_pending:
          type: integer
        max_deliver:
          type: integer
        sample_freq:
          type: string
      type: object
    JSShareRequest:
      type: object
    JSStreamConfigRequest:
      allOf:
      - $ref: '#/components/schemas/JSCommonStreamConfig'
      properties:
        subjects:
          items:
            type: string
          type: array
      type: object
    JSStreamConfigResponse:
      $ref: '#/components/schemas/JSStreamConfigRequest'
    JSStreamInfoListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/JSStreamInfoResponse'
          type: array
      required:
      - items
      type: object
    JSStreamInfoResponse:
      allOf:
      - $ref: '#/components/schemas/JSCommonStreamInfo'
      - required:
        - id
        - config
        - jetstream_type
      properties:
        config:
          $ref: '#/components/schemas/JSStreamConfigRequest'
        id:
          type: string
        jetstream_type:
          $ref: '#/components/schemas/JSType'
      type: object
    JSType:
      enum:
      - stream
      - mirror
      - kv-bucket
      - object-bucket
      type: string
    JetStreamAPIStats:
      properties:
        errors:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        inflight:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        total:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
      required:
      - total
      - errors
      type: object
    JetStreamAccountLimits:
      properties:
        max_ack_pending:
          type: integer
        max_bytes_required:
          type: boolean
        max_consumers:
          type: integer
        max_memory:
          format: int64
          type: integer
        max_storage:
          format: int64
          type: integer
        max_streams:
          type: integer
        memory_max_stream_bytes:
          format: int64
          type: integer
        storage_max_stream_bytes:
          format: int64
          type: integer
      required:
      - max_memory
      - max_storage
      - max_streams
      - max_consumers
      - max_ack_pending
      - memory_max_stream_bytes
      - storage_max_stream_bytes
      - max_bytes_required
      type: object
    JetStreamAccountStats:
      description: JetStreamAccountStats returns current statistics about the account's
        JetStream usage.
      properties:
        JetStreamTier:
          $ref: '#/components/schemas/JetStreamTier'
        api:
          $ref: '#/components/schemas/JetStreamAPIStats'
        domain:
          type: string
        tiers:
          additionalProperties:
            $ref: '#/components/schemas/JetStreamTier'
          type: object
      required:
      - JetStreamTier
      - api
      type: object
    JetStreamConfig:
      description: |-
        JetStreamConfig determines this server's configuration.
        MaxMemory and MaxStore are in bytes.
      properties:
        compress_ok:
          type: boolean
        domain:
          type: string
        max_memory:
          format: int64
          type: integer
        max_storage:
          format: int64
          type: integer
        store_dir:
          type: string
      required:
      - max_memory
      - max_storage
      type: object
    JetStreamLimits:
      properties:
        consumer:
          format: int64
          type: integer
        disk_max_stream_bytes:
          format: int64
          type: integer
        disk_storage:
          format: int64
          type: integer
        max_ack_pending:
          format: int64
          type: integer
        max_bytes_required:
          type: boolean
        mem_max_stream_bytes:
          format: int64
          type: integer
        mem_storage:
          format: int64
          type: integer
        streams:
          format: int64
          type: integer
      type: object
    JetStreamStats:
      description: Statistics about JetStream for this server.
      properties:
        accounts:
          type: integer
        api:
          $ref: '#/components/schemas/JetStreamAPIStats'
        ha_assets:
          type: integer
        memory:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        reserved_memory:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        reserved_storage:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        storage:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
      required:
      - memory
      - storage
      - reserved_memory
      - reserved_storage
      - accounts
      - ha_assets
      - api
      type: object
    JetStreamTier:
      properties:
        consumers:
          type: integer
        limits:
          $ref: '#/components/schemas/JetStreamAccountLimits'
        memory:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        storage:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        streams:
          type: integer
      required:
      - memory
      - storage
      - streams
      - consumers
      - limits
      type: object
    JetStreamTieredLimits:
      additionalProperties:
        $ref: '#/components/schemas/JetStreamLimits'
      type: object
    JetStreamTieredLimitsPatch:
      additionalProperties:
        allOf:
        - $ref: '#/components/schemas/JetStreamLimits'
        nullable: true
        type: object
      type: object
    JetStreamVarz:
      description: JetStreamVarz contains basic runtime information about jetstream
      properties:
        config:
          allOf:
          - $ref: '#/components/schemas/JetStreamConfig'
          nullable: true
          type: object
        meta:
          allOf:
          - $ref: '#/components/schemas/MetaClusterInfo'
          nullable: true
          type: object
        stats:
          allOf:
          - $ref: '#/components/schemas/JetStreamStats'
          nullable: true
          type: object
      type: object
    JwtSyncStatus:
      enum:
      - InProgress
      - Complete
      - Failed
      type: string
    LeafInfo:
      description: LeafInfo has detailed information on each remote leafnode connection.
      properties:
        account:
          type: string
        in_bytes:
          format: int64
          type: integer
        in_msgs:
          format: int64
          type: integer
        ip:
          type: string
        is_spoke:
          type: boolean
        name:
          type: string
        out_bytes:
          format: int64
          type: integer
        out_msgs:
          format: int64
          type: integer
        port:
          type: integer
        rtt:
          type: string
        subscriptions:
          maximum: 4294967295
          minimum: 0
          type: integer
        subscriptions_list:
          items:
            type: string
          type: array
      required:
      - name
      - account
      - ip
      - port
      - in_msgs
      - out_msgs
      - in_bytes
      - out_bytes
      - subscriptions
      type: object
    Leafz:
      description: Leafz represents detailed information on Leafnodes.
      properties:
        leafnodes:
          type: integer
        leafs:
          items:
            allOf:
            - $ref: '#/components/schemas/LeafInfo'
            nullable: true
            type: object
          type: array
        now:
          format: date-time
          type: string
        server_id:
          type: string
      required:
      - server_id
      - now
      - leafnodes
      - leafs
      type: object
    ListResponse:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Schema'
          type: array
      required:
      - schemas
      type: object
    LostStreamData:
      description: LostStreamData indicates msgs that have been lost during file checks
        and recover due to corruption
      properties:
        bytes:
          description: How many bytes were lost
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        msgs:
          description: Message IDs of lost messages
          items:
            maximum: 1.8446744073709552e+19
            minimum: 0
            type: integer
          type: array
      required:
      - msgs
      - bytes
      type: object
    Mapping:
      additionalProperties:
        items:
          $ref: '#/components/schemas/WeightedMapping'
        type: array
      type: object
    MappingPatch:
      additionalProperties:
        items:
          $ref: '#/components/schemas/WeightedMapping'
        nullable: true
        type: array
      type: object
    MetaClusterInfo:
      description: MetaClusterInfo shows information about the meta group.
      properties:
        cluster_size:
          type: integer
        leader:
          type: string
        name:
          type: string
        replicas:
          items:
            allOf:
            - $ref: '#/components/schemas/PeerInfo'
            nullable: true
            type: object
          type: array
      required:
      - cluster_size
      type: object
    NatsAlertingConfig:
      properties:
        account:
          type: string
        subject:
          type: string
      required:
      - account
      - subject
      type: object
    NatsAlertingConfigPatch:
      properties:
        account:
          type: string
        subject:
          type: string
      type: object
    NatsCluster:
      properties:
        connections:
          type: integer
        incoming_gateways:
          type: integer
        name:
          type: string
        node_count:
          type: integer
        outgoing_gateways:
          type: integer
        servers:
          items:
            $ref: '#/components/schemas/NatsServer'
          type: array
      required:
      - name
      - node_count
      - connections
      - incoming_gateways
      - outgoing_gateways
      - servers
      type: object
    NatsClusterListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/NatsCluster'
          type: array
      required:
      - items
      type: object
    NatsCreateUserJwtSettings:
      allOf:
      - $ref: '#/components/schemas/Permissions'
      - $ref: '#/components/schemas/UserLimits'
      description: |-
        used to provide default values for create requests
        extention of jwt.#UserPermissionsLimits
      properties:
        allowed_connection_types:
          items:
            type: string
          type: array
        bearer_token:
          type: boolean
        data:
          default: -1
          maximum: 9223372036854776000
          minimum: -1
          type: integer
        payload:
          default: -1
          maximum: 9223372036854776000
          minimum: -1
          type: integer
        subs:
          default: -1
          maximum: 9223372036854776000
          minimum: -1
          type: integer
        tags:
          items:
            type: string
          type: array
      type: object
    NatsLimits:
      properties:
        data:
          format: int64
          type: integer
        payload:
          format: int64
          type: integer
        subs:
          format: int64
          type: integer
      type: object
    NatsServer:
      allOf:
      - $ref: '#/components/schemas/ServerStatsMsg'
      properties:
        leaf_nodes:
          $ref: '#/components/schemas/Leafz'
      type: object
    NatsServerInfoListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ServerInfo'
          type: array
      required:
      - items
      type: object
    NatsServerListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ServerStatsMsg'
          type: array
      required:
      - items
      type: object
    NatsUserConnectionsListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Connz'
          type: array
      required:
      - items
      type: object
    NatsUserCopyRequest:
      properties:
        name:
          type: string
        sk_group_id:
          type: string
      required:
      - name
      - sk_group_id
      type: object
    NatsUserCreateRequest:
      properties:
        jwt_expires_in_secs:
          format: int64
          type: integer
        jwt_settings:
          $ref: '#/components/schemas/NatsCreateUserJwtSettings'
        name:
          type: string
        sk_group_id:
          type: string
      required:
      - name
      - sk_group_id
      type: object
    NatsUserHTTPGWTokenCreateReply:
      properties:
        token:
          type: string
      required:
      - token
      type: object
    NatsUserInfo:
      properties:
        id:
          type: string
        name:
          type: string
        user_public_key:
          type: string
      required:
      - id
      - user_public_key
      - name
      type: object
    NatsUserIssuanceEvent:
      properties:
        app_user:
          $ref: '#/components/schemas/AppUserInfo'
        exp:
          format: int64
          type: integer
        iat:
          format: int64
          type: integer
        jti:
          type: string
        status:
          $ref: '#/components/schemas/NatsUserIssuanceStatus'
        type:
          $ref: '#/components/schemas/NatsUserIssuanceEventType'
      required:
      - jti
      - iat
      - type
      - app_user
      - status
      type: object
    NatsUserIssuanceEventType:
      enum:
      - Import
      - Download
      - BearerJwt
      - HttpGwToken
      type: string
    NatsUserIssuanceInfo:
      properties:
        created:
          format: date-time
          type: string
        events_count:
          description: total download events for this issuance
          type: integer
        exp_max:
          description: highest expiry time, undefined means Unlimited (exp not set)
          format: int64
          type: integer
        iat_max:
          description: most recent time this was issued
          format: int64
          type: integer
        iat_min:
          description: first time this was issued
          format: int64
          type: integer
        id:
          type: string
        iss:
          description: issuer account public nkey
          type: string
        name:
          type: string
        status:
          $ref: '#/components/schemas/NatsUserIssuanceStatus'
        sub:
          description: nats user public nkey
          type: string
      required:
      - id
      - iss
      - sub
      - name
      - iat_max
      - iat_min
      - events_count
      - created
      - status
      type: object
    NatsUserIssuanceStatus:
      description: |-
        NatsUserIssuanceStatus indicates status of an issuance relative to its signing key
        In context of issuance, status indicates following:
          Active - Signing key exists, and no revocations
          Revoked - Signing key exists, and has revocation entry with RevokedBefore > IatMax
          Partially Revoked - Signing key exists, and has revocation entry with IssMax > RevokedBefore > IatMin
          SK Disabled - Signing key is disabled
          SK Group Disabled - Signing key group is disabled
          SK Removed - Signing key no longer exists
          Expired - All issuances are expired
        In context of an issuance event, status indicates following:
          Active - Signing key exists, and no revocations
          Revoked - Signing key exists, and has revocation entry with RevokedBefore > Iat
          SK Disabled - Signing key is disabled
          SK Group Disabled - Signing key group is disabled
          SK Removed - Signing key no longer exists
          Expired - Expired time set on credential has passed
      enum:
      - Active
      - Revoked
      - Partially Revoked
      - SK Disabled
      - SK Group Disabled
      - SK Removed
      - Expired
      type: string
    NatsUserIssuanceViewResponse:
      properties:
        checksum:
          description: |-
            sha256 sum of (NatsUserId,Iss,Sub,Name,json_encode(Nats))
            If a credential is downloaded and results in a unique checksum then a new issuance record is created.
            If a credential's checksum matches an existing record, a new event is appended to the existing record.
          type: string
        created:
          format: date-time
          type: string
        events:
          description: trail of download events
          items:
            $ref: '#/components/schemas/NatsUserIssuanceEvent'
          type: array
        exp_max:
          description: highest expiry time, undefined means Unlimited (exp not set)
          format: int64
          type: integer
        iat_max:
          description: most recent time this was issued
          format: int64
          type: integer
        iat_min:
          description: first time this was issued
          format: int64
          type: integer
        id:
          type: string
        iss:
          description: issuer account public nkey
          type: string
        name:
          type: string
        nats:
          $ref: '#/components/schemas/User'
        status:
          $ref: '#/components/schemas/NatsUserIssuanceStatus'
        sub:
          description: nats user public nkey
          type: string
      required:
      - id
      - iss
      - sub
      - name
      - nats
      - checksum
      - iat_max
      - iat_min
      - events
      - created
      - status
      type: object
    NatsUserIssuancesListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/NatsUserIssuanceInfo'
          type: array
      required:
      - items
      type: object
    NatsUserJwtSettings:
      allOf:
      - $ref: '#/components/schemas/Permissions'
      - $ref: '#/components/schemas/UserLimits'
      description: |-
        Set correct allowed values
        extention of jwt.#UserPermissionsLimits
      properties:
        allowed_connection_types:
          items:
            type: string
          type: array
        bearer_token:
          type: boolean
        data:
          maximum: 9223372036854776000
          minimum: -1
          type: integer
        payload:
          maximum: 9223372036854776000
          minimum: -1
          type: integer
        subs:
          maximum: 9223372036854776000
          minimum: -1
          type: integer
        tags:
          items:
            type: string
          type: array
      type: object
    NatsUserJwtSettingsPatch:
      properties:
        allowed_connection_types:
          items:
            type: string
          nullable: true
          type: array
        bearer_token:
          type: boolean
        data:
          maximum: 9223372036854776000
          minimum: -1
          type: integer
        payload:
          maximum: 9223372036854776000
          minimum: -1
          type: integer
        pub:
          allOf:
          - $ref: '#/components/schemas/PermissionPatch'
          nullable: true
          type: object
        resp:
          allOf:
          - $ref: '#/components/schemas/ResponsePermissionPatch'
          nullable: true
          type: object
        src:
          items:
            type: string
          nullable: true
          type: array
        sub:
          allOf:
          - $ref: '#/components/schemas/PermissionPatch'
          nullable: true
          type: object
        subs:
          maximum: 9223372036854776000
          minimum: -1
          type: integer
        tags:
          items:
            type: string
          nullable: true
          type: array
        times:
          items:
            properties:
              end:
                type: string
              start:
                type: string
            type: object
          nullable: true
          type: array
        times_location:
          nullable: true
          type: string
      type: object
    NatsUserListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/NatsUserViewResponse'
          type: array
      required:
      - items
      type: object
    NatsUserRevocationRequest:
      properties:
        before:
          format: int64
          type: integer
      required:
      - before
      type: object
    NatsUserRevocationViewResponse:
      properties:
        account_id:
          type: string
        account_sk_id:
          type: string
        before:
          format: int64
          type: integer
        created:
          format: date-time
          type: string
        user_nkey_public:
          type: string
      required:
      - account_id
      - user_nkey_public
      - before
      - created
      type: object
    NatsUserUpdateRequest:
      properties:
        jwt_expires_in_secs:
          format: int64
          type: integer
        jwt_settings:
          $ref: '#/components/schemas/NatsUserJwtSettingsPatch'
        name:
          type: string
      type: object
    NatsUserViewResponse:
      properties:
        account:
          $ref: '#/components/schemas/AccountInfo'
        claims:
          $ref: '#/components/schemas/jwtUserClaims'
        created:
          format: date-time
          type: string
        id:
          type: string
        jwt:
          type: string
        jwt_expires_at_max:
          format: int64
          type: integer
        jwt_expires_in_secs:
          format: int64
          type: integer
        jwt_settings:
          $ref: '#/components/schemas/NatsUserJwtSettings'
        name:
          type: string
        sk_group_id:
          type: string
        system:
          $ref: '#/components/schemas/SystemInfo'
        team:
          $ref: '#/components/schemas/TeamInfo'
        user_public_key:
          type: string
      required:
      - id
      - created
      - account
      - system
      - team
      - claims
      - jwt_settings
      - jwt
      - name
      - user_public_key
      - jwt_expires_in_secs
      - jwt_expires_at_max
      type: object
    ObjectStoreConfig:
      description: ObjectStoreConfig is the config for the object store.
      properties:
        bucket:
          type: string
        compression:
          description: |-
            Enable underlying stream compression.
            NOTE: Compression is supported for nats-server 2.10.0+
          type: boolean
        description:
          type: string
        max_age:
          format: int64
          type: integer
        max_bytes:
          format: int64
          type: integer
        metadata:
          additionalProperties:
            type: string
          description: |-
            Bucket-specific metadata
            NOTE: Metadata requires nats-server v2.10.0+
          type: object
        num_replicas:
          type: integer
        placement:
          $ref: '#/components/schemas/Placement'
        storage:
          $ref: '#/components/schemas/StorageType'
      required:
      - bucket
      type: object
    Operator:
      allOf:
      - $ref: '#/components/schemas/GenericFields'
      description: Operator specific claims
      properties:
        account_server_url:
          description: |-
            AccountServerURL is a partial URL like "https://host.domain.org:<port>/jwt/v1"
            tools will use the prefix and build queries by appending /accounts/<account_id>
            or /operator to the path provided. Note this assumes that the account server
            can handle requests in a account-server compatible way. See
            https://github.com/nats-io/account-server.
          type: string
        assert_server_version:
          description: Min Server version
          type: string
        operator_service_urls:
          description: |-
            A list of NATS urls (tls://host:port) where tools can connect to the server
            using proper credentials.
          items:
            type: string
          type: array
        signing_keys:
          description: |-
            Slice of other operator NKeys that can be used to sign on behalf of the main
            operator identity.
          items:
            type: string
          type: array
        strict_signing_key_usage:
          description: Signing of subordinate objects will require signing keys
          type: boolean
        system_account:
          description: Identity of the system account
          type: string
      type: object
    OperatorClaims:
      allOf:
      - $ref: '#/components/schemas/ClaimsData'
      description: OperatorClaims define the data for an operator JWT
      properties:
        nats:
          $ref: '#/components/schemas/Operator'
      type: object
    OperatorExport:
      properties:
        id:
          type: string
        jwt:
          type: string
        name:
          type: string
        seed:
          type: string
        signing_keys:
          items:
            $ref: '#/components/schemas/SigningKeyExport'
          type: array
      required:
      - name
      - id
      - jwt
      type: object
    OperatorLimits:
      allOf:
      - $ref: '#/components/schemas/NatsLimits'
      - $ref: '#/components/schemas/AccountLimits'
      - $ref: '#/components/schemas/JetStreamLimits'
      description: OperatorLimits are used to limit access by an account
      properties:
        tiered_limits:
          $ref: '#/components/schemas/JetStreamTieredLimits'
      type: object
    OperatorLimitsPatch:
      properties:
        conn:
          format: int64
          type: integer
        consumer:
          format: int64
          type: integer
        data:
          format: int64
          type: integer
        disallow_bearer:
          type: boolean
        disk_max_stream_bytes:
          format: int64
          type: integer
        disk_storage:
          format: int64
          type: integer
        exports:
          format: int64
          type: integer
        imports:
          format: int64
          type: integer
        leaf:
          format: int64
          type: integer
        max_ack_pending:
          format: int64
          type: integer
        max_bytes_required:
          type: boolean
        mem_max_stream_bytes:
          format: int64
          type: integer
        mem_storage:
          format: int64
          type: integer
        payload:
          format: int64
          type: integer
        streams:
          format: int64
          type: integer
        subs:
          format: int64
          type: integer
        tiered_limits:
          allOf:
          - $ref: '#/components/schemas/JetStreamTieredLimitsPatch'
          nullable: true
          type: object
        wildcards:
          type: boolean
      type: object
    PeerInfo:
      description: |-
        PeerInfo shows information about all the peers in the cluster that
        are supporting the stream or consumer.
      properties:
        active:
          format: int64
          type: integer
        current:
          type: boolean
        lag:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        name:
          type: string
        offline:
          type: boolean
      required:
      - name
      - current
      - active
      type: object
    Permission:
      description: Permission defines allow/deny subjects
      properties:
        allow:
          items:
            type: string
          type: array
        deny:
          items:
            type: string
          type: array
      type: object
    PermissionPatch:
      properties:
        allow:
          items:
            type: string
          nullable: true
          type: array
        deny:
          items:
            type: string
          nullable: true
          type: array
      type: object
    Permissions:
      description: Permissions are used to restrict subject access, either on a user
        or for everyone on a server by default
      properties:
        pub:
          $ref: '#/components/schemas/Permission'
        resp:
          $ref: '#/components/schemas/ResponsePermission'
        sub:
          $ref: '#/components/schemas/Permission'
      type: object
    Placement:
      description: Placement describes stream placement requirements for a stream
      properties:
        cluster:
          type: string
        tags:
          items:
            type: string
          type: array
      required:
      - cluster
      type: object
    PlatformComponent:
      properties:
        config:
          $ref: '#/components/schemas/PlatformComponentConfigs'
        enabled:
          type: boolean
        id:
          type: string
        type:
          $ref: '#/components/schemas/PlatformComponentType'
      required:
      - id
      - type
      - enabled
      type: object
    PlatformComponentConfigs:
      oneOf:
      - $ref: '#/components/schemas/HttpGatewayPlatformComponentConfig'
      - allOf:
        - $ref: '#/components/schemas/ConnectorsPlatformComponentConfig'
        - not:
            anyOf:
            - $ref: '#/components/schemas/HttpGatewayPlatformComponentConfig'
            - $ref: '#/components/schemas/AuthCalloutAuthenticatorComponentConfig'
            - $ref: '#/components/schemas/WorkloadsPlatformComponentConfig'
            - $ref: '#/components/schemas/ScraperComponentConfig'
      - $ref: '#/components/schemas/AuthCalloutAuthenticatorComponentConfig'
      - $ref: '#/components/schemas/WorkloadsPlatformComponentConfig'
      - $ref: '#/components/schemas/ScraperComponentConfig'
      - not:
          anyOf:
          - $ref: '#/components/schemas/HttpGatewayPlatformComponentConfig'
          - $ref: '#/components/schemas/ConnectorsPlatformComponentConfig'
          - $ref: '#/components/schemas/AuthCalloutAuthenticatorComponentConfig'
          - $ref: '#/components/schemas/WorkloadsPlatformComponentConfig'
          - $ref: '#/components/schemas/ScraperComponentConfig'
      type: object
    PlatformComponentConnectConfig:
      oneOf:
      - $ref: '#/components/schemas/HttpGatewayPlatformComponentConfig'
      - $ref: '#/components/schemas/AuthCalloutAuthenticatorComponentConfig'
      - not:
          anyOf:
          - $ref: '#/components/schemas/HttpGatewayPlatformComponentConfig'
          - $ref: '#/components/schemas/AuthCalloutAuthenticatorComponentConfig'
      type: object
    PlatformComponentTokenViewResponse:
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        last_access:
          format: date-time
          type: string
        token:
          type: string
      required:
      - id
      - created
      - token
      type: object
    PlatformComponentType:
      enum:
      - http_gateway
      - connectors
      - authenticators
      - workloads
      - scraper
      - schema_registry
      type: string
    PlatformComponentsConfigSchema:
      properties:
        data:
          type: string
        name:
          type: string
        required:
          type: boolean
        type:
          type: integer
      required:
      - name
      - type
      - required
      type: object
    PlatformComponentsConnectRequest:
      properties:
        data:
          $ref: '#/components/schemas/PlatformComponentConnectConfig'
        nkey_public:
          type: string
      required:
      - nkey_public
      type: object
    PlatformComponentsConnectViewResponse:
      properties:
        account:
          type: string
        config:
          $ref: '#/components/schemas/PlatformComponentConfigs'
        jwt:
          type: string
        server:
          type: string
      required:
      - jwt
      - account
      - server
      type: object
    PlatformComponentsUpdateRequest:
      properties:
        config:
          $ref: '#/components/schemas/PlatformComponentConfigs'
        enabled:
          type: boolean
        type:
          $ref: '#/components/schemas/PlatformComponentType'
      required:
      - type
      - enabled
      type: object
    PlatformComponentsViewResponse:
      properties:
        components:
          items:
            $ref: '#/components/schemas/PlatformComponent'
          type: array
        system_id:
          type: string
      required:
      - system_id
      - components
      type: object
    PolicyListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppPolicy'
          type: array
      required:
      - items
      type: object
    PromSampleValue:
      properties:
        timestamp:
          format: int64
          type: integer
        value:
          format: double
          type: number
      required:
      - timestamp
      - value
      type: object
    RePublish:
      description: RePublish allows a source subject to be mapped to a destination
        subject for republishing.
      properties:
        dest:
          type: string
        headers_only:
          type: boolean
        src:
          type: string
      required:
      - dest
      type: object
    RemoveRequest:
      properties:
        format:
          nullable: true
          type: string
        name:
          description: Name of the schema (required).
          type: string
        revision:
          description: |-
            Revision of the schema (optional). If not set, the latest revision
            of the schema will be removed.
          type: integer
        version:
          type: integer
      type: object
    ReplayPolicy:
      enum:
      - instant
      - original
      type: string
    ResponsePermission:
      description: |-
        ResponsePermission can be used to allow responses to any reply subject
        that is received on a valid subscription.
      properties:
        max:
          type: integer
        ttl:
          format: int64
          type: integer
      required:
      - max
      - ttl
      type: object
    ResponsePermissionPatch:
      properties:
        max:
          type: integer
        ttl:
          format: int64
          type: integer
      type: object
    ResponseType:
      description: ResponseType is used to store an export response type
      enum:
      - Singleton
      - Stream
      - Chunked
      type: string
    RetentionPolicy:
      enum:
      - limits
      - interest
      - workqueue
      type: string
    RevocationList:
      additionalProperties:
        format: int64
        type: integer
      description: RevocationList is used to store a mapping of public keys to unix
        timestamps
      type: object
    RevocationListPatch:
      additionalProperties:
        maximum: 9223372036854776000
        minimum: -9.223372036854776e+18
        nullable: true
        type: integer
      type: object
    RoleListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/AppRole'
          type: array
      required:
      - items
      type: object
    RouteStat:
      description: RouteStat holds route statistics.
      properties:
        name:
          type: string
        pending:
          type: integer
        received:
          $ref: '#/components/schemas/DataStats'
        rid:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        sent:
          $ref: '#/components/schemas/DataStats'
      required:
      - rid
      - sent
      - received
      - pending
      type: object
    S2Compression:
      enum:
      - s2
      type: string
    SDKubeLimit:
      properties:
        five_node:
          type: integer
        three_node:
          type: integer
      required:
      - three_node
      - five_node
      type: object
    SamplingRate:
      maximum: 100
      minimum: 0
      type: integer
    Schema:
      properties:
        compat_policy:
          $ref: '#/components/schemas/SchemaCompatPolicy'
        definition:
          description: The schema definition.
          type: string
        delete:
          description: Deleted is a flag to indicate if the schema is deleted.
          type: boolean
        description:
          description: Description of the schema.
          type: string
        format:
          $ref: '#/components/schemas/SchemaFormat'
        metadata:
          additionalProperties:
            type: string
          description: Metadata is a map of key-value pairs.
          type: object
        name:
          description: Unique name of the schema.
          type: string
        revision:
          description: Revision of the schema.
          type: integer
        time:
          description: Timestamp when this schema was added.
          format: date-time
          type: string
        version:
          description: |-
            TODO(jrm): We probably do not need the ID, as we can use subject + version as a compound unique identifier.
            Unique identifier of the schema.
            ID string `json:"id"`
          type: integer
      required:
      - version
      - revision
      - time
      - name
      - definition
      - format
      - compat_policy
      - description
      - metadata
      type: object
    SchemaCompatPolicy:
      type: string
    SchemaFormat:
      type: string
    SchemaRegistryAddRequest:
      $ref: '#/components/schemas/AddRequest'
    SchemaRegistryAddResponse:
      $ref: '#/components/schemas/AddResponse'
    SchemaRegistryCompatPolicy:
      default: backwards
      enum:
      - backwards
      - none
      - forward
      - full
      type: string
    SchemaRegistryFormat:
      default: jsonschema
      enum:
      - jsonschema
      - protobuf
      - avro
      type: string
    SchemaRegistryGetResponse:
      $ref: '#/components/schemas/GetResponse'
    SchemaRegistryListResponse:
      $ref: '#/components/schemas/ListResponse'
    SchemaRegistryPlatformComponentConfig:
      properties:
        account:
          type: string
        bucket:
          type: string
      required:
      - account
      - bucket
      type: object
    SchemaRegistryRemoveRequest:
      $ref: '#/components/schemas/RemoveRequest'
    SchemaRegistrySchema:
      $ref: '#/components/schemas/Schema'
    SchemaRegistryUpdateRequest:
      $ref: '#/components/schemas/AddRequest'
    SchemaRegistryUpdateResponse:
      $ref: '#/components/schemas/UpdateResponse'
    SchemaRegistryValidateRequest:
      $ref: '#/components/schemas/ValidateRequest'
    SchemaRegistryValidateResponse:
      $ref: '#/components/schemas/ValidateResponse'
    ScraperComponentConfig:
      properties:
        account:
          type: string
        interval:
          default: 15
          minimum: 0
          type: integer
        stream:
          type: string
      required:
      - interval
      - account
      - stream
      type: object
    SequenceInfo:
      description: SequenceInfo is the consumer and stream sequence that uniquely
        identify a message
      properties:
        consumer_seq:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        last_active:
          nullable: true
          type: string
        stream_seq:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
      required:
      - consumer_seq
      - stream_seq
      type: object
    ServerInfo:
      description: ServerInfo identifies remote servers.
      properties:
        cluster:
          type: string
        domain:
          type: string
        host:
          type: string
        id:
          type: string
        jetstream:
          type: boolean
        name:
          type: string
        seq:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        tags:
          items:
            type: string
          type: array
        time:
          format: date-time
          type: string
        ver:
          type: string
      required:
      - name
      - host
      - id
      - ver
      - seq
      - jetstream
      - time
      type: object
    ServerStats:
      description: ServerStats hold various statistics that we will periodically send
        out.
      properties:
        active_accounts:
          type: integer
        active_servers:
          type: integer
        connections:
          type: integer
        cores:
          type: integer
        cpu:
          format: double
          type: number
        gateways:
          items:
            allOf:
            - $ref: '#/components/schemas/GatewayStat'
            nullable: true
            type: object
          type: array
        jetstream:
          allOf:
          - $ref: '#/components/schemas/JetStreamVarz'
          nullable: true
          type: object
        mem:
          format: int64
          type: integer
        received:
          $ref: '#/components/schemas/DataStats'
        routes:
          items:
            allOf:
            - $ref: '#/components/schemas/RouteStat'
            nullable: true
            type: object
          type: array
        sent:
          $ref: '#/components/schemas/DataStats'
        slow_consumers:
          format: int64
          type: integer
        start:
          format: date-time
          type: string
        subscriptions:
          maximum: 4294967295
          minimum: 0
          type: integer
        total_connections:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
      required:
      - start
      - mem
      - cores
      - cpu
      - connections
      - total_connections
      - active_accounts
      - subscriptions
      - sent
      - received
      - slow_consumers
      type: object
    ServerStatsMsg:
      description: ServerStatsMsg is sent periodically with stats updates.
      properties:
        server:
          $ref: '#/components/schemas/ServerInfo'
        statsz:
          $ref: '#/components/schemas/ServerStats'
      required:
      - server
      - statsz
      type: object
    ServiceAccountCreateRequest:
      properties:
        name:
          type: string
        resources:
          additionalProperties:
            $ref: '#/components/schemas/AppUserAssignRequest'
          description: resource keys must be in format ServiceAccountResourceScope:resource_id
          type: object
        role_id:
          type: string
      required:
      - name
      - role_id
      - resources
      type: object
    ServiceAccountListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ServiceAccountViewResponse'
          type: array
      required:
      - items
      type: object
    ServiceAccountResourceScope:
      enum:
      - Team
      - System
      - Account
      - NatsUser
      type: string
    ServiceAccountScope:
      enum:
      - App
      - Team
      type: string
    ServiceAccountUpdateRequest:
      properties:
        name:
          type: string
        resources:
          additionalProperties:
            allOf:
            - $ref: '#/components/schemas/AppUserAssignRequest'
            nullable: true
            type: object
          description: |-
            Resource keys must be in format ServiceAccountResourceScope:resource_id.
            To delete a resource, set its key to null
          type: object
        role_id:
          type: string
      type: object
    ServiceAccountViewResponse:
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        last_active:
          nullable: true
          type: string
        name:
          type: string
        resources:
          additionalProperties:
            $ref: '#/components/schemas/AppUserAssignResponse'
          description: resource keys must be in format ServiceAccountResourceScope:resource_id
          type: object
        role_id:
          type: string
        scope:
          $ref: '#/components/schemas/ServiceAccountScope'
        team_id:
          type: string
      required:
      - id
      - created
      - name
      - scope
      - role_id
      - last_active
      - resources
      type: object
    ServiceLatency:
      description: |-
        ServiceLatency is used when observing and exported service for
        latency measurements.
        Sampling 1-100, represents sampling rate, defaults to 100.
        Results is the subject where the latency metrics are published.
        A metric will be defined by the nats-server's ServiceLatency. Time durations
        are in nanoseconds.
        see https://github.com/nats-io/nats-server/blob/main/server/accounts.go#L524
        e.g.
        {
         "app": "dlc22",
         "start": "2019-09-16T21:46:23.636869585-07:00",
         "svc": 219732,
         "nats": {
           "req": 320415,
           "resp": 228268,
           "sys": 0
         },
         "total": 768415
        }
      properties:
        results:
          type: string
        sampling:
          $ref: '#/components/schemas/SamplingRate'
      required:
      - sampling
      - results
      type: object
    ServiceLatencyPatch:
      properties:
        results:
          type: string
        sampling:
          $ref: '#/components/schemas/SamplingRate'
      type: object
    SigningKeyExport:
      properties:
        id:
          type: string
        seed:
          type: string
      required:
      - id
      - seed
      type: object
    SigningKeyGroupCopyRequest:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    SigningKeyGroupCreateRequest:
      properties:
        name:
          type: string
        programmatic:
          default: false
          type: boolean
        scope:
          $ref: '#/components/schemas/UserPermissionLimits'
        seed:
          type: string
      required:
      - name
      - programmatic
      type: object
    SigningKeyGroupCreateResponse:
      allOf:
      - $ref: '#/components/schemas/SigningKeyGroupViewResponse'
      properties:
        seed:
          type: string
      type: object
    SigningKeyGroupExport:
      properties:
        name:
          type: string
        signing_keys:
          items:
            $ref: '#/components/schemas/SigningKeyExport'
          type: array
      required:
      - name
      - signing_keys
      type: object
    SigningKeyGroupListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/SigningKeyGroupViewResponse'
          type: array
      required:
      - items
      type: object
    SigningKeyGroupUpdateRequest:
      properties:
        disabled:
          type: boolean
        name:
          type: string
        scope:
          $ref: '#/components/schemas/UserPermissionLimitsPatch'
      type: object
    SigningKeyGroupViewResponse:
      properties:
        created:
          format: date-time
          type: string
        disabled:
          type: boolean
        disabled_at:
          format: date-time
          type: string
        id:
          type: string
        is_scoped:
          type: boolean
        missing_seed:
          type: boolean
        name:
          type: string
        programmatic:
          type: boolean
        scope:
          $ref: '#/components/schemas/UserPermissionLimits'
      required:
      - id
      - name
      - created
      - disabled
      - is_scoped
      - programmatic
      - missing_seed
      type: object
    SigningKeyListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/SigningKeyViewResponse'
          type: array
      required:
      - items
      type: object
    SigningKeyRotateResponse:
      allOf:
      - $ref: '#/components/schemas/SigningKeyViewResponse'
      properties:
        seed:
          type: string
      type: object
    SigningKeyScope:
      properties:
        key:
          type: string
        kind:
          $ref: '#/components/schemas/SigningKeyScopeType'
        role:
          type: string
        template:
          $ref: '#/components/schemas/UserPermissionLimits'
      required:
      - kind
      - key
      - role
      - template
      type: object
    SigningKeyScopeType:
      enum:
      - user_scope
      type: string
    SigningKeyUpdateRequest:
      properties:
        disabled:
          type: boolean
        seed:
          type: string
      type: object
    SigningKeyViewResponse:
      properties:
        created:
          format: date-time
          type: string
        current:
          type: boolean
        disabled:
          type: boolean
        disabled_at:
          format: date-time
          type: string
        group_id:
          type: string
        id:
          type: string
        missing_seed:
          type: boolean
        public_key:
          type: string
        rotated:
          type: boolean
        rotated_at:
          format: date-time
          type: string
      required:
      - id
      - group_id
      - public_key
      - current
      - created
      - disabled
      - rotated
      - missing_seed
      type: object
    SigningKeys:
      description: 'SigningKeys an array of either String or #SigningKeyScope'
      items:
        oneOf:
        - type: string
        - $ref: '#/components/schemas/SigningKeyScope'
      type: array
    StorageType:
      enum:
      - file
      - memory
      type: string
    StreamAlternate:
      properties:
        cluster:
          type: string
        domain:
          type: string
        name:
          type: string
      required:
      - name
      - cluster
      type: object
    StreamExportCreateRequest:
      properties:
        is_public:
          type: boolean
        stream_name:
          type: string
      required:
      - stream_name
      - is_public
      type: object
    StreamExportListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/StreamExportViewResponse'
          type: array
      required:
      - items
      type: object
    StreamExportSharedListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/StreamExportSharedViewResponse'
          type: array
      required:
      - items
      type: object
    StreamExportSharedViewResponse:
      properties:
        deliver_subject_prefix:
          type: string
        is_public:
          type: boolean
        js_subject_prefix:
          type: string
        remote_account_nkey_public:
          type: string
        stream_name:
          type: string
      required:
      - remote_account_nkey_public
      - stream_name
      - js_subject_prefix
      - deliver_subject_prefix
      - is_public
      type: object
    StreamExportViewResponse:
      description: |-
        /
        Stream export
        /
      properties:
        account_id:
          type: string
        created:
          format: date-time
          type: string
        deliver_subject_prefix:
          type: string
        id:
          type: string
        is_public:
          type: boolean
        js_subject_prefix:
          type: string
        stream_name:
          type: string
      required:
      - id
      - created
      - account_id
      - stream_name
      - is_public
      - js_subject_prefix
      - deliver_subject_prefix
      type: object
    StreamImportCreateRequest:
      properties:
        deliver_subject_prefix:
          type: string
        is_public:
          type: boolean
        js_subject_prefix:
          type: string
        remote_account_nkey_public:
          type: string
        stream_name:
          type: string
      required:
      - remote_account_nkey_public
      - stream_name
      - js_subject_prefix
      - deliver_subject_prefix
      - is_public
      type: object
    StreamImportListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/StreamImportViewResponse'
          type: array
      required:
      - items
      type: object
    StreamImportViewResponse:
      description: |-
        /
        Stream Import
        /
      properties:
        account_id:
          type: string
        created:
          format: date-time
          type: string
        deliver_subject:
          type: string
        id:
          type: string
        js_subject_prefix:
          type: string
        remote_account_nkey_public:
          type: string
        stream_name:
          type: string
      required:
      - id
      - created
      - account_id
      - remote_account_nkey_public
      - stream_name
      - js_subject_prefix
      - deliver_subject
      type: object
    StreamShareCreateRequest:
      description: |-
        /
        Stream Share
        /
      properties:
        target_account_nkey_public:
          type: string
      required:
      - target_account_nkey_public
      type: object
    StreamShareListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/StreamShareViewResponse'
          type: array
      required:
      - items
      type: object
    StreamShareViewResponse:
      properties:
        target_account_nkey_public:
          type: string
      required:
      - target_account_nkey_public
      type: object
    StreamSource:
      description: StreamSource dictates how streams can source from other streams.
      properties:
        external:
          allOf:
          - $ref: '#/components/schemas/ExternalStream'
          nullable: true
          type: object
        filter_subject:
          type: string
        name:
          type: string
        opt_start_seq:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        opt_start_time:
          nullable: true
          type: string
        subject_transforms:
          items:
            $ref: '#/components/schemas/SubjectTransformConfig'
          type: array
      required:
      - name
      type: object
    StreamSourceInfo:
      description: StreamSourceInfo shows information about an upstream stream source.
      properties:
        active:
          format: int64
          type: integer
        error:
          allOf:
          - $ref: '#/components/schemas/JSApiError'
          nullable: true
          type: object
        external:
          allOf:
          - $ref: '#/components/schemas/ExternalStream'
          nullable: true
          type: object
        filter_subject:
          type: string
        lag:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        name:
          type: string
        subject_transform_dest:
          type: string
        subject_transforms:
          items:
            $ref: '#/components/schemas/SubjectTransformConfig'
          type: array
      required:
      - name
      - lag
      - active
      type: object
    StreamState:
      properties:
        bytes:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        consumer_count:
          type: integer
        deleted:
          items:
            maximum: 1.8446744073709552e+19
            minimum: 0
            type: integer
          type: array
        first_seq:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        first_ts:
          format: date-time
          type: string
        last_seq:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        last_ts:
          format: date-time
          type: string
        lost:
          allOf:
          - $ref: '#/components/schemas/LostStreamData'
          nullable: true
          type: object
        messages:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        num_deleted:
          type: integer
        num_subjects:
          type: integer
        subjects:
          additionalProperties:
            maximum: 1.8446744073709552e+19
            minimum: 0
            type: integer
          type: object
      required:
      - messages
      - bytes
      - first_seq
      - first_ts
      - last_seq
      - last_ts
      - consumer_count
      type: object
    SubDetail:
      description: SubDetail is for verbose information for subscriptions.
      properties:
        account:
          type: string
        cid:
          maximum: 1.8446744073709552e+19
          minimum: 0
          type: integer
        max:
          format: int64
          type: integer
        msgs:
          format: int64
          type: integer
        qgroup:
          type: string
        sid:
          type: string
        subject:
          type: string
      required:
      - subject
      - sid
      - msgs
      - cid
      type: object
    SubjectExportChartTypes:
      enum:
      - ServiceLatency
      - SystemLatency
      - TotalLatency
      - Throughput
      - ErrorRate
      type: string
    SubjectExportCreateRequest:
      properties:
        jwt_settings:
          $ref: '#/components/schemas/Export'
        metrics_enabled:
          type: boolean
        metrics_sampling_percentage:
          format: int64
          type: integer
      required:
      - jwt_settings
      - metrics_enabled
      - metrics_sampling_percentage
      type: object
    SubjectExportListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/SubjectExportViewResponse'
          type: array
      required:
      - items
      type: object
    SubjectExportSharedListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/SubjectExportSharedViewResponse'
          type: array
      required:
      - items
      type: object
    SubjectExportSharedViewResponse:
      properties:
        export_id:
          type: string
        jwt_settings:
          $ref: '#/components/schemas/Import'
      required:
      - jwt_settings
      - export_id
      type: object
    SubjectExportUpdateRequest:
      properties:
        jwt_settings:
          $ref: '#/components/schemas/ExportPatch'
        metrics_enabled:
          type: boolean
        metrics_sampling_percentage:
          format: int64
          type: integer
      type: object
    SubjectExportViewResponse:
      description: |-
        /
        Subject Exports
        /
      properties:
        account:
          $ref: '#/components/schemas/AccountInfo'
        created:
          format: date-time
          type: string
        id:
          type: string
        is_public:
          type: boolean
        jwt_settings:
          $ref: '#/components/schemas/Export'
        metrics_enabled:
          type: boolean
        metrics_sampling_percentage:
          format: int64
          type: integer
        name:
          nullable: true
          type: string
        share_sk_public:
          nullable: true
          type: string
        stream_export_id:
          nullable: true
          type: string
        subject:
          type: string
      required:
      - id
      - created
      - account
      - name
      - metrics_enabled
      - metrics_sampling_percentage
      - jwt_settings
      - stream_export_id
      - share_sk_public
      - is_public
      - subject
      type: object
    SubjectImportCreateRequest:
      properties:
        jwt_settings:
          $ref: '#/components/schemas/Import'
      required:
      - jwt_settings
      type: object
    SubjectImportListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/SubjectImportViewResponse'
          type: array
      required:
      - items
      type: object
    SubjectImportUpdateRequest:
      properties:
        jwt_settings:
          $ref: '#/components/schemas/ImportPatch'
      type: object
    SubjectImportViewResponse:
      description: |-
        /
        Subject Imports
        /
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        jwt_settings:
          $ref: '#/components/schemas/Import'
        name:
          type: string
        remote_account_nkey_public:
          type: string
        remote_subject:
          type: string
      required:
      - id
      - created
      - name
      - jwt_settings
      - remote_subject
      - remote_account_nkey_public
      type: object
    SubjectShareCreateRequest:
      properties:
        target_account_nkey_public:
          type: string
      required:
      - target_account_nkey_public
      type: object
    SubjectShareListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/SubjectShareViewResponse'
          type: array
      required:
      - items
      type: object
    SubjectShareViewResponse:
      description: |-
        /
        Subject Shares
        /
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        jwt:
          type: string
        jwt_claims:
          $ref: '#/components/schemas/ActivationClaims'
        subject_export_id:
          type: string
        target_account_nkey_public:
          type: string
      required:
      - id
      - created
      - subject_export_id
      - target_account_nkey_public
      - jwt
      - jwt_claims
      type: object
    SubjectTransformConfig:
      description: |-
        SubjectTransformConfig is for applying a subject transform (to matching messages) before doing anything else
        when a new message is received
      properties:
        dest:
          type: string
        src:
          type: string
      required:
      - src
      - dest
      type: object
    SystemAccountImportRequest:
      properties:
        jwt:
          type: string
        seed:
          type: string
        signing_keys:
          items:
            type: string
          type: array
      required:
      - jwt
      - seed
      type: object
    SystemConnectionType:
      default: Agent
      enum:
      - Agent
      - Direct
      type: string
    SystemConnectionsListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/Connz'
          type: array
      required:
      - items
      type: object
    SystemCreateRequest:
      properties:
        connection_type:
          $ref: '#/components/schemas/SystemConnectionType'
        direct_connection_opts:
          $ref: '#/components/schemas/SystemDirectConnectionOpts'
        jetstream_domain:
          type: string
        jetstream_enabled:
          default: true
          type: boolean
        managed_by:
          $ref: '#/components/schemas/SystemManagedBy'
        name:
          type: string
        url:
          type: string
      required:
      - name
      - url
      type: object
    SystemDirectConnectionOpts:
      properties:
        override_urls:
          type: string
        tls_ca_certs:
          type: string
        tls_client_cert:
          type: string
        tls_client_key:
          type: string
        tls_insecure_skip_verify:
          default: false
          type: boolean
        tls_mode:
          $ref: '#/components/schemas/TLSMode'
      required:
      - tls_mode
      - tls_insecure_skip_verify
      type: object
    SystemDirectConnectionOptsPatch:
      properties:
        override_urls:
          type: string
        tls_ca_certs:
          type: string
        tls_client_cert:
          type: string
        tls_client_key:
          type: string
        tls_insecure_skip_verify:
          default: false
          type: boolean
        tls_mode:
          $ref: '#/components/schemas/TLSMode'
      type: object
    SystemExportResponse:
      properties:
        accounts:
          items:
            $ref: '#/components/schemas/AccountExportResponse'
          type: array
        name:
          type: string
        operator:
          $ref: '#/components/schemas/OperatorExport'
        system_account:
          $ref: '#/components/schemas/AccountExportResponse'
      required:
      - name
      - operator
      - system_account
      - accounts
      type: object
    SystemImportRequest:
      properties:
        jetstream_domain:
          type: string
        jetstream_enabled:
          default: true
          type: boolean
        managed_by:
          $ref: '#/components/schemas/SystemManagedBy'
        operator_jwt:
          type: string
        operator_key:
          type: string
        system_jwt:
          type: string
        system_key:
          type: string
      required:
      - operator_jwt
      - operator_key
      - system_jwt
      - system_key
      type: object
    SystemInfo:
      properties:
        connection_type:
          $ref: '#/components/schemas/SystemConnectionType'
        http_gateway_url:
          type: string
        id:
          type: string
        is_tenant:
          type: boolean
        jetstream_domain:
          type: string
        jetstream_enabled:
          type: boolean
        jetstream_tiers:
          items:
            type: string
          type: array
        managed_by:
          $ref: '#/components/schemas/SystemManagedBy'
        name:
          type: string
        server_urls:
          type: string
        state:
          $ref: '#/components/schemas/SystemState'
        user_jwt_expires_in_secs:
          format: int64
          type: integer
      required:
      - id
      - name
      - user_jwt_expires_in_secs
      - state
      - jetstream_enabled
      - is_tenant
      - connection_type
      type: object
    SystemLimitsResponse:
      properties:
        allocated:
          $ref: '#/components/schemas/TenantLimits'
        available:
          $ref: '#/components/schemas/TenantLimits'
        total:
          $ref: '#/components/schemas/TenantLimits'
      required:
      - total
      - allocated
      - available
      type: object
    SystemListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/SystemViewResponse'
          type: array
      required:
      - items
      type: object
    SystemLogForwardingOpts:
      properties:
        account_id:
          type: string
        audit_only:
          type: boolean
        enabled:
          type: boolean
        levels:
          items:
            $ref: '#/components/schemas/SystemLogLevel'
          type: array
        subject_prefix:
          type: string
      required:
      - enabled
      - audit_only
      - subject_prefix
      - account_id
      - levels
      type: object
    SystemLogForwardingOptsPatch:
      properties:
        account_id:
          type: string
        audit_only:
          type: boolean
        enabled:
          type: boolean
        levels:
          items:
            $ref: '#/components/schemas/SystemLogLevel'
          type: array
        subject_prefix:
          type: string
      type: object
    SystemLogLevel:
      enum:
      - panic
      - fatal
      - error
      - warn
      - info
      - debug
      - trace
      type: string
    SystemManagedBy:
      enum:
      - byon
      - sdkube
      type: string
    SystemState:
      enum:
      - Provisioning
      - Connected
      - Disconnected
      type: string
    SystemUpdateRequest:
      properties:
        connection_type:
          $ref: '#/components/schemas/SystemConnectionType'
        direct_connection_opts:
          allOf:
          - $ref: '#/components/schemas/SystemDirectConnectionOptsPatch'
          nullable: true
          type: object
        jetstream_domain:
          nullable: true
          type: string
        jetstream_enabled:
          type: boolean
        log_forwarding_opts:
          allOf:
          - $ref: '#/components/schemas/SystemLogForwardingOptsPatch'
          nullable: true
          type: object
        name:
          type: string
        nats_alerting_config:
          allOf:
          - $ref: '#/components/schemas/NatsAlertingConfigPatch'
          nullable: true
          type: object
        operator_jwt:
          type: string
        url:
          type: string
      type: object
    SystemUserImportRequest:
      properties:
        credential:
          type: string
        jwt:
          type: string
        seed:
          type: string
      type: object
    SystemViewResponse:
      properties:
        connection_type:
          $ref: '#/components/schemas/SystemConnectionType'
        created:
          format: date-time
          type: string
        direct_connection_opts:
          $ref: '#/components/schemas/SystemDirectConnectionOpts'
        has_managed_operator:
          type: boolean
        has_managed_system_account:
          type: boolean
        host_system_id:
          type: string
        id:
          type: string
        is_tenant:
          type: boolean
        jetstream_domain:
          type: string
        jetstream_enabled:
          type: boolean
        jetstream_tiers:
          items:
            type: string
          type: array
        limited:
          type: boolean
        log_forwarding_opts:
          $ref: '#/components/schemas/SystemLogForwardingOpts'
        managed_by:
          $ref: '#/components/schemas/SystemManagedBy'
        max_nodes:
          format: int32
          type: integer
        name:
          type: string
        nats_alerting_config:
          $ref: '#/components/schemas/NatsAlertingConfig'
        operator_claims:
          $ref: '#/components/schemas/OperatorClaims'
        operator_jwt:
          type: string
        platform_components:
          $ref: '#/components/schemas/PlatformComponentsViewResponse'
        state:
          $ref: '#/components/schemas/SystemState'
        system_account_jwt:
          type: string
        team:
          $ref: '#/components/schemas/TeamInfo'
        updates_available:
          additionalProperties:
            $ref: '#/components/schemas/Update'
          type: object
        user_jwt_expires_in_secs:
          format: int64
          type: integer
      required:
      - id
      - created
      - team
      - name
      - user_jwt_expires_in_secs
      - has_managed_operator
      - has_managed_system_account
      - state
      - jetstream_enabled
      - is_tenant
      - connection_type
      - limited
      - updates_available
      type: object
    TLSMode:
      enum:
      - Auto
      - Require
      - Implicit
      type: string
    TLSPeerCert:
      description: TLSPeerCert contains basic information about a TLS peer certificate
      properties:
        cert_sha256:
          type: string
        spki_sha256:
          type: string
        subject:
          type: string
      type: object
    TeamAppUserAssociation:
      properties:
        resource_id:
          type: string
        resource_type:
          $ref: '#/components/schemas/TeamAppUserResourceType'
        role_id:
          type: string
      required:
      - resource_id
      - resource_type
      - role_id
      type: object
    TeamAppUserInfo:
      properties:
        id:
          type: string
        pending_invitation:
          type: boolean
        role_id:
          type: string
        role_name:
          type: string
      required:
      - id
      - role_id
      - role_name
      - pending_invitation
      type: object
    TeamAppUserListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/TeamAppUserViewResponse'
          type: array
      required:
      - items
      type: object
    TeamAppUserResourceType:
      enum:
      - System
      - Account
      - NatsUser
      type: string
    TeamAppUserViewResponse:
      properties:
        app_user:
          $ref: '#/components/schemas/AppUserInfo'
        created:
          format: date-time
          type: string
        id:
          type: string
        pending_invitation:
          type: boolean
        role_id:
          type: string
        role_name:
          type: string
        team:
          $ref: '#/components/schemas/TeamInfo'
      required:
      - id
      - created
      - role_id
      - role_name
      - team
      - app_user
      - pending_invitation
      type: object
    TeamCreateRequest:
      properties:
        name:
          type: string
      required:
      - name
      type: object
    TeamInfo:
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    TeamLimits:
      properties:
        disable_prometheus_federation:
          type: boolean
        num_sdkube:
          allOf:
          - $ref: '#/components/schemas/SDKubeLimit'
          nullable: true
          type: object
        num_systems:
          nullable: true
          type: integer
        num_users:
          nullable: true
          type: integer
      required:
      - num_systems
      - num_users
      - num_sdkube
      - disable_prometheus_federation
      type: object
    TeamLimitsResponse:
      properties:
        allocated:
          $ref: '#/components/schemas/TeamLimits'
        available:
          $ref: '#/components/schemas/TeamLimits'
        total:
          $ref: '#/components/schemas/TeamLimits'
      required:
      - total
      - allocated
      - available
      type: object
    TeamListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/TeamViewResponse'
          type: array
      required:
      - items
      type: object
    TeamUpdateRequest:
      properties:
        name:
          type: string
      type: object
    TeamViewResponse:
      properties:
        created:
          format: date-time
          type: string
        id:
          type: string
        limits:
          $ref: '#/components/schemas/TeamLimits'
        name:
          type: string
      required:
      - id
      - name
      - created
      type: object
    TenantLimits:
      properties:
        data:
          $ref: '#/components/schemas/DataLimits'
        num_accounts:
          nullable: true
          type: integer
        num_connectors:
          nullable: true
          type: integer
        resource_limits:
          $ref: '#/components/schemas/OperatorLimits'
        workloads:
          $ref: '#/components/schemas/WorkloadLimits'
      required:
      - num_accounts
      - workloads
      - num_connectors
      - resource_limits
      type: object
    TimeRange:
      description: TimeRange is used to represent a start and end time
      properties:
        end:
          type: string
        start:
          type: string
      type: object
    UpdatableKVBucketConfig:
      properties:
        compression:
          type: boolean
        description:
          type: string
        history:
          maximum: 255
          minimum: 0
          type: integer
        max_age:
          format: int64
          type: integer
        max_bytes:
          format: int64
          type: integer
        max_value_size:
          format: int32
          type: integer
        mirror:
          $ref: '#/components/schemas/StreamSource'
        num_replicas:
          type: integer
        placement:
          $ref: '#/components/schemas/Placement'
        republish:
          $ref: '#/components/schemas/RePublish'
        sources:
          items:
            $ref: '#/components/schemas/StreamSource'
          type: array
      type: object
    UpdatableObjectBucketConfig:
      description: ObjectStoreConfig is the config for the object store.
      properties:
        compression:
          description: |-
            Enable underlying stream compression.
            NOTE: Compression is supported for nats-server 2.10.0+
          type: boolean
        description:
          type: string
        max_age:
          format: int64
          type: integer
        max_bytes:
          format: int64
          type: integer
        metadata:
          additionalProperties:
            type: string
          description: |-
            Bucket-specific metadata
            NOTE: Metadata requires nats-server v2.10.0+
          type: object
        num_replicas:
          type: integer
        placement:
          $ref: '#/components/schemas/Placement'
      type: object
    Update:
      properties:
        current:
          type: string
        latest:
          type: string
        latest_minor:
          type: string
        latest_patch:
          type: string
      required:
      - current
      - latest
      - latest_minor
      - latest_patch
      type: object
    UpdateResponse:
      properties:
        revision:
          type: integer
        version:
          type: integer
      required:
      - revision
      - version
      type: object
    User:
      allOf:
      - $ref: '#/components/schemas/GenericFields'
      - $ref: '#/components/schemas/UserPermissionLimits'
      description: User defines the user specific data in a user JWT
      properties:
        issuer_account:
          description: |-
            IssuerAccount stores the public key for the account the issuer represents.
            When set, the claim was issued by a signing key.
          type: string
      type: object
    UserClaims:
      allOf:
      - $ref: '#/components/schemas/ClaimsData'
      description: UserClaims defines a user JWT
      properties:
        nats:
          $ref: '#/components/schemas/User'
      type: object
    UserExport:
      properties:
        id:
          type: string
        jwt:
          type: string
        name:
          type: string
        seed:
          type: string
      required:
      - name
      - id
      - jwt
      - seed
      type: object
    UserLimits:
      description: Src is a comma separated list of CIDR specifications
      properties:
        src:
          items:
            type: string
          type: array
        times:
          items:
            $ref: '#/components/schemas/TimeRange'
          type: array
        times_location:
          type: string
      type: object
    UserPermissionLimits:
      allOf:
      - $ref: '#/components/schemas/Permissions'
      - $ref: '#/components/schemas/UserLimits'
      - $ref: '#/components/schemas/NatsLimits'
      properties:
        allowed_connection_types:
          items:
            type: string
          type: array
        bearer_token:
          type: boolean
      type: object
    UserPermissionLimitsPatch:
      properties:
        allowed_connection_types:
          items:
            type: string
          nullable: true
          type: array
        bearer_token:
          type: boolean
        data:
          format: int64
          type: integer
        payload:
          format: int64
          type: integer
        pub:
          allOf:
          - $ref: '#/components/schemas/PermissionPatch'
          nullable: true
          type: object
        resp:
          allOf:
          - $ref: '#/components/schemas/ResponsePermissionPatch'
          nullable: true
          type: object
        src:
          items:
            type: string
          nullable: true
          type: array
        sub:
          allOf:
          - $ref: '#/components/schemas/PermissionPatch'
          nullable: true
          type: object
        subs:
          format: int64
          type: integer
        times:
          items:
            properties:
              end:
                type: string
              start:
                type: string
            type: object
          nullable: true
          type: array
        times_location:
          nullable: true
          type: string
      type: object
    ValidateRequest:
      properties:
        data:
          description: Data to validate.
          format: binary
          type: string
        name:
          description: Name of the schema (optional). Must be set if subject is not.
          type: string
        revision:
          description: |-
            Revision of the schema (optional). If not set, the latest version
            of the schema will be used.
          type: integer
        subject:
          description: Subject of the schema. Must be set if name is not.
          type: string
        version:
          type: integer
      required:
      - data
      type: object
    ValidateResponse:
      type: object
    VersionResponse:
      properties:
        commit:
          type: string
        date:
          type: string
        version:
          type: string
      required:
      - version
      - commit
      - date
      type: object
    WeightedMapping:
      description: Mapping for publishes
      properties:
        cluster:
          type: string
        subject:
          type: string
        weight:
          maximum: 255
          minimum: 0
          type: integer
      required:
      - subject
      type: object
    WorkloadAuctionRequest:
      properties:
        agent_type:
          type: string
        tags:
          $ref: '#/components/schemas/WorkloadTags'
      required:
      - agent_type
      - tags
      type: object
    WorkloadAuctionResponse:
      properties:
        bidder_id:
          type: string
        start_request_schema:
          items:
            $ref: '#/components/schemas/WorkloadField'
          type: array
        supported_lifecycles:
          items:
            type: string
          type: array
        xkey:
          type: string
      required:
      - bidder_id
      - supported_lifecycles
      - start_request_schema
      - xkey
      type: object
    WorkloadField:
      properties:
        constraints:
          items:
            $ref: '#/components/schemas/WorkloadFieldConstraint'
          type: array
        default: {}
        description:
          type: string
        fields:
          items:
            $ref: '#/components/schemas/WorkloadField'
          type: array
        kind:
          $ref: '#/components/schemas/WorkloadFieldKind'
        name:
          type: string
        optional:
          type: boolean
        type:
          $ref: '#/components/schemas/WorkloadFieldType'
      required:
      - name
      - kind
      - type
      - description
      type: object
    WorkloadFieldConstraint:
      properties:
        enum:
          items:
            type: string
          type: array
        preset:
          type: string
        range:
          $ref: '#/components/schemas/WorkloadFieldContstraintRange'
        regex:
          type: string
        unique_items:
          type: boolean
      type: object
    WorkloadFieldContstraintRange:
      properties:
        gt:
          format: double
          type: number
        gte:
          format: double
          type: number
        lt:
          format: double
          type: number
        lte:
          format: double
          type: number
      type: object
    WorkloadFieldKind:
      enum:
      - scalar
      - map
      - list
      type: string
    WorkloadFieldType:
      enum:
      - bool
      - int
      - object
      - string
      type: string
    WorkloadLifecycle:
      enum:
      - function
      - job
      - service
      type: string
    WorkloadLimits:
      properties:
        container:
          type: integer
        function:
          type: integer
      required:
      - container
      - function
      type: object
    WorkloadLimitsResponse:
      properties:
        connectors:
          $ref: '#/components/schemas/WorkloadStateLimit'
        workloads:
          $ref: '#/components/schemas/WorkloadStateLimits'
      required:
      - workloads
      - connectors
      type: object
    WorkloadMetricChartResponse:
      properties:
        WorkloadsDenoIsolateConnectedTriggersByNamespace:
          description: JavaScript
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsDenoIsolateExecutionTimeByWorkload:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsDenoIsolateExecutionTimeByWorkloadHistogram:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsDenoIsolateInvocationCountByWorkload:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsDenoIsolateRunningWorkloadsByNamespace:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerBlockInputTotal:
          description: Container
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerBlockOutputTotal:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerCpuSecondsTotal:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerCpuSystemSecondsTotal:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerCreatedSeconds:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerExitCode:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerExitedSeconds:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerHealth:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerInfo:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerMemLimitBytes:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerMemUsageBytes:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerNetInputDroppedTotal:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerNetInputErrorsTotal:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerNetInputPacketsTotal:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerNetInputTotal:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerNetOutputDroppedTotal:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerNetOutputErrorsTotal:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerNetOutputPacketsTotal:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerNetOutputTotal:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerPids:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerRootfsSizeBytes:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerRwSizeBytes:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerStartedSeconds:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
        WorkloadsPodmanContainerState:
          items:
            $ref: '#/components/schemas/ApexSeries'
          type: array
      type: object
    WorkloadMetricChartTypes:
      enum:
      - WorkloadsDenoIsolateConnectedTriggersByNamespace
      - WorkloadsDenoIsolateRunningWorkloadsByNamespace
      - WorkloadsDenoIsolateInvocationCountByWorkload
      - WorkloadsDenoIsolateExecutionTimeByWorkload
      - WorkloadsDenoIsolateExecutionTimeByWorkloadHistogram
      - WorkloadsPodmanContainerBlockInputTotal
      - WorkloadsPodmanContainerBlockOutputTotal
      - WorkloadsPodmanContainerCpuSecondsTotal
      - WorkloadsPodmanContainerCpuSystemSecondsTotal
      - WorkloadsPodmanContainerCreatedSeconds
      - WorkloadsPodmanContainerExitCode
      - WorkloadsPodmanContainerExitedSeconds
      - WorkloadsPodmanContainerHealth
      - WorkloadsPodmanContainerInfo
      - WorkloadsPodmanContainerMemLimitBytes
      - WorkloadsPodmanContainerMemUsageBytes
      - WorkloadsPodmanContainerNetInputDroppedTotal
      - WorkloadsPodmanContainerNetInputErrorsTotal
      - WorkloadsPodmanContainerNetInputPacketsTotal
      - WorkloadsPodmanContainerNetInputTotal
      - WorkloadsPodmanContainerNetOutputDroppedTotal
      - WorkloadsPodmanContainerNetOutputErrorsTotal
      - WorkloadsPodmanContainerNetOutputPacketsTotal
      - WorkloadsPodmanContainerNetOutputTotal
      - WorkloadsPodmanContainerPids
      - WorkloadsPodmanContainerRootfsSizeBytes
      - WorkloadsPodmanContainerRwSizeBytes
      - WorkloadsPodmanContainerStartedSeconds
      - WorkloadsPodmanContainerState
      type: string
    WorkloadStartRequest:
      properties:
        auction:
          $ref: '#/components/schemas/WorkloadAuctionRequest'
        description:
          type: string
        name:
          type: string
        run_request:
          type: string
        workload_lifecycle:
          type: string
        workload_type:
          type: string
      required:
      - description
      - name
      - run_request
      - workload_lifecycle
      - workload_type
      - auction
      type: object
    WorkloadStartResponse:
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      type: object
    WorkloadState:
      enum:
      - error
      - running
      - starting
      - stopping
      - stopped
      - warm
      type: string
    WorkloadStateLimit:
      properties:
        current_count:
          format: int64
          type: integer
        limit:
          format: int64
          type: integer
      required:
      - limit
      - current_count
      type: object
    WorkloadStateLimits:
      properties:
        container:
          $ref: '#/components/schemas/WorkloadStateLimit'
        function:
          $ref: '#/components/schemas/WorkloadStateLimit'
      required:
      - container
      - function
      type: object
    WorkloadStopResponse:
      properties:
        id:
          type: string
        message:
          type: string
        stopped:
          type: boolean
      required:
      - id
      - message
      - stopped
      type: object
    WorkloadSummary:
      properties:
        id:
          type: string
        name:
          type: string
        runtime:
          type: string
        start_time:
          type: string
        tags:
          additionalProperties:
            type: string
          type: object
        workload_lifecycle:
          $ref: '#/components/schemas/WorkloadLifecycle'
        workload_state:
          $ref: '#/components/schemas/WorkloadState'
        workload_type:
          type: string
      required:
      - id
      - name
      - runtime
      - start_time
      - workload_lifecycle
      - workload_state
      - workload_type
      - tags
      type: object
    WorkloadTags:
      properties:
        cloud:
          items:
            type: string
          type: array
        region:
          items:
            type: string
          type: array
      required:
      - cloud
      - region
      type: object
    WorkloadsListResponse:
      properties:
        items:
          items:
            $ref: '#/components/schemas/WorkloadSummary'
          type: array
      required:
      - items
      type: object
    WorkloadsPlatformComponentConfig:
      properties:
        account:
          type: string
        nexus_name:
          type: string
      required:
      - account
      - nexus_name
      type: object
    jwtAccountClaims:
      $ref: '#/components/schemas/AccountClaims'
    jwtUserClaims:
      $ref: '#/components/schemas/UserClaims'
  securitySchemes:
    bearerAuth:
      bearerFormat: Personal Access Token
      scheme: bearer
      type: http
    sessionAuth:
      in: cookie
      name: synadia_cloud_session
      type: apiKey
info:
  description: API for __APP_NAME__
  title: __APP_NAME__
  version: beta
openapi: 3.0.0
paths:
  /core/beta/account-sk-groups/{groupId}:
    delete:
      description: Deletes Account Signing Key Group
      operationId: deleteAccountSkGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Account Signing Key Group
      tags:
      - sig-key-group
      x-doc-tags:
      - Signing Key Groups
    get:
      description: Get Account Signing Key Group
      operationId: getAccountSkGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyGroupViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Account Signing Key Group
      tags:
      - sig-key-group
      x-doc-tags:
      - Signing Key Groups
    patch:
      description: Update Account Signing Key Group
      operationId: updateAccountSkGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigningKeyGroupUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyGroupViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Account Signing Key Group
      tags:
      - sig-key-group
      x-doc-tags:
      - Signing Key Groups
  /core/beta/account-sk-groups/{groupId}/account-sks:
    get:
      description: List Account Signing Keys In Group
      operationId: listAccountSkGroupKeys
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Signing Keys
      tags:
      - sig-key-group
      x-doc-tags:
      - Signing Key Groups
  /core/beta/account-sk-groups/{groupId}/copy:
    post:
      description: Copies Account SK Group. Copies all users from old SK group to
        the new SK group, generating new NKeys for copied users.
      operationId: copyAccountSkGroup
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigningKeyGroupCopyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyGroupViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Copy Account SK Group
      tags:
      - sig-key-group
      x-doc-tags:
      - Signing Key Groups
  /core/beta/account-sk-groups/{groupId}/nats-users:
    get:
      description: Returns a list of NATS users for the given signing key group
      operationId: listAccountSKGroupUsers
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List NATS Users
      tags:
      - sig-key-group
      x-doc-tags:
      - NATS Users
  /core/beta/account-sk-groups/{groupId}/rotate-sk:
    post:
      description: Rotates The Active Signing Key For Account Signing Key Group
      operationId: rotateAccountSk
      parameters:
      - in: path
        name: groupId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyRotateResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Roate Active Signing Key
      tags:
      - sig-key-group
      x-doc-tags:
      - Signing Key Groups
  /core/beta/account-sks/{keyId}:
    delete:
      description: Deletes Account Signing
      operationId: deleteAccountSk
      parameters:
      - in: path
        name: keyId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Account Signing
      tags:
      - sig-key
      x-doc-tags:
      - Signing Key Groups
    get:
      description: Get Account Signing
      operationId: getAccountSk
      parameters:
      - in: path
        name: keyId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Account Signing
      tags:
      - sig-key
      x-doc-tags:
      - Signing Key Groups
    patch:
      description: Update Account Signing
      operationId: updateAccountSk
      parameters:
      - in: path
        name: keyId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigningKeyUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Account Signing
      tags:
      - sig-key
      x-doc-tags:
      - Signing Key Groups
  /core/beta/accounts/{accountId}:
    delete:
      description: Deletes a Account in a system
      operationId: deleteAccount
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          description: Unprocessable
      summary: Delete Account
      tags:
      - account
      x-doc-tags:
      - Accounts
    get:
      description: Returns a Account by ID
      operationId: getAccount
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Account
      tags:
      - account
      x-doc-tags:
      - Accounts
    patch:
      description: Updates a Account in a system
      operationId: updateAccount
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Account
      tags:
      - account
      x-doc-tags:
      - Accounts
  /core/beta/accounts/{accountId}/account-sk-groups:
    get:
      description: List Account Signing Key Groups
      operationId: listAccountSkGroup
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyGroupListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Account Signing Key Groups
      tags:
      - account
      x-doc-tags:
      - Signing Key Groups
    post:
      description: Creates Account Signing Key Group
      operationId: createAccountSkGroup
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigningKeyGroupCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningKeyGroupCreateResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Account Signing Key Group
      tags:
      - account
      x-doc-tags:
      - Signing Key Groups
  /core/beta/accounts/{accountId}/alert-rules:
    get:
      description: List Account Alert Rules
      operationId: listAlertRules
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Account Alert Rules
      tags:
      - account
      x-doc-tags:
      - Alerts
    post:
      description: Creates Account Alert Rule
      operationId: createAlertRule
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRuleAccountCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Account Alert Rule
      tags:
      - account
      x-doc-tags:
      - Alerts
  /core/beta/accounts/{accountId}/alert-rules/{alertRuleId}:
    delete:
      description: Deletes Account alert rule
      operationId: deleteAlertRule
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      - in: path
        name: alertRuleId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Account Alert Rule
      tags:
      - account
      x-doc-tags:
      - Alerts
    get:
      description: Get Account Alert Rule
      operationId: getAlertRule
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      - in: path
        name: alertRuleId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Account Alert Rule
      tags:
      - account
      x-doc-tags:
      - Alerts
    patch:
      description: Update Account Alert Rule
      operationId: updateAlertRule
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      - in: path
        name: alertRuleId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRuleUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Account Alert Rule
      tags:
      - account
      x-doc-tags:
      - Alerts
  /core/beta/accounts/{accountId}/alert-rules/{alertRuleId}/run:
    get:
      description: Run Account Alert Rule and return an alert object if the rule condition
        is met
      operationId: runAlertRule
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      - in: path
        name: alertRuleId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Run Account Alert Rule
      tags:
      - account
      x-doc-tags:
      - Alerts
  /core/beta/accounts/{accountId}/app-users:
    get:
      description: Returns a list of Team App Users associated with the Account
      operationId: listAccountTeamAppUsers
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Account Team App Users
      tags:
      - account
      x-doc-tags:
      - App Users
  /core/beta/accounts/{accountId}/app-users/{teamAppUserId}:
    delete:
      description: Unassign a Team App User from an Account
      operationId: unAssignAccountTeamAppUser
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      - in: path
        name: teamAppUserId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Unassign Team App User from Account
      tags:
      - account
      x-doc-tags:
      - App Users
    post:
      description: Assign a Team App User to an Account. This operation is idempotent;
        if an App User is already assigned to the Account the assignemnt will be updated
        with the new role
      operationId: assignAccountTeamAppUser
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      - in: path
        name: teamAppUserId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAssignRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Assign Team App User to Account
      tags:
      - account
      x-doc-tags:
      - App Users
  /core/beta/accounts/{accountId}/connections:
    get:
      description: List Account Connections
      operationId: listAccountConnections
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
      - in: query
        name: cid
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: string
      - in: query
        name: subject
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: number
      - in: query
        name: user
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountConnectionsListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Account Connections
      tags:
      - account
      x-doc-tags:
      - Accounts
  /core/beta/accounts/{accountId}/export:
    get:
      description: Export Account Seeds
      operationId: getAccountExport
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountExportResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Export Account Seeds
      tags:
      - account
      x-doc-tags:
      - Accounts
  /core/beta/accounts/{accountId}/info:
    get:
      description: Returns Account info
      operationId: getAccountInfo
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSAcctStats'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Account Info
      tags:
      - account
      x-doc-tags:
      - Accounts
  /core/beta/accounts/{accountId}/jetstream:
    get:
      description: List JetStream Assets
      operationId: listJetStreamAssets
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSStreamInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List JetStream Assets
      tags:
      - account
      x-doc-tags:
      - JetStream
  /core/beta/accounts/{accountId}/jetstream/kv-buckets:
    get:
      description: List KV buckets
      operationId: listKvBuckets
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSKVBucketListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List KV buckets
      tags:
      - account
      x-doc-tags:
      - 'JetStream: KV Buckets'
    post:
      description: Creates KV Bucket
      operationId: createKvBucket
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSKVBucketConfig'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSKVBucketViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create KV Bucket
      tags:
      - account
      x-doc-tags:
      - 'JetStream: KV Buckets'
  /core/beta/accounts/{accountId}/jetstream/mirrors:
    get:
      description: List Mirrors
      operationId: listMirrors
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSMirrorInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Mirrors
      tags:
      - account
      x-doc-tags:
      - 'JetStream: Mirrors'
    post:
      description: Creates Mirror
      operationId: createMirror
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSMirrorConfigRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSMirrorInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Mirror
      tags:
      - account
      x-doc-tags:
      - 'JetStream: Mirrors'
  /core/beta/accounts/{accountId}/jetstream/object-buckets:
    get:
      description: List Object buckets
      operationId: listObjectBuckets
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSObjectBucketListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Object buckets
      tags:
      - account
      x-doc-tags:
      - 'JetStream: Object Buckets'
    post:
      description: Creates Object Bucket
      operationId: createObjectBucket
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSObjectBucketConfig'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSObjectBucketViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Object Bucket
      tags:
      - account
      x-doc-tags:
      - 'JetStream: Object Buckets'
  /core/beta/accounts/{accountId}/jetstream/placement-options:
    get:
      description: Get available options for JetStream placement
      operationId: getJetStreamPlacementOptions
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPlacementOptionsResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get JetStream Placement Options
      tags:
      - account
      x-doc-tags:
      - JetStream
  /core/beta/accounts/{accountId}/jetstream/streams:
    get:
      description: List Streams
      operationId: listStreams
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSStreamInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Streams
      tags:
      - account
      x-doc-tags:
      - 'JetStream: Streams'
    post:
      description: Create Stream
      operationId: createStream
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSStreamConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSStreamInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Stream
      tags:
      - account
      x-doc-tags:
      - 'JetStream: Streams'
  /core/beta/accounts/{accountId}/metrics:
    get:
      description: Returns Account metrics
      operationId: getAccountMetrics
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountMetrics'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Account Metrics
      tags:
      - account
      x-doc-tags:
      - Accounts
  /core/beta/accounts/{accountId}/nats-core/websocket/view:
    get:
      description: |-
        This endpoint enables connection to NATS over WebSocket using account credentials.

        It generates a user JWT from the account signing key and acts as a proxy to establish a connection with the first NATS server defined in a System.
        Options specified in the CONNECT request from client take priority, so the caller should avoid including authentication information in CONNECT to leverage automatic JWT injection.

        As a proxy, direct connection to NATS servers may be unavailable for the caller.
        Hence, it's advised to disregard all server update messages.
        In nats.ws, achieve this by setting 'ignoreClusterUpdates' to true.
      operationId: natsCoreWebsocketViewer
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      - in: query
        name: subject
        required: true
        schema:
          type: string
      responses:
        "101":
          description: Switching Protocols
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Subscribe to a NATS Core subject over websockets
      tags:
      - account
      x-doc-tags:
      - Accounts
  /core/beta/accounts/{accountId}/nats-user-revocations/{userNkeyPublic}:
    delete:
      description: Deletes a Revocation for the given NATS User NKey
      operationId: deleteNatsUserRevocation
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      - in: path
        name: userNkeyPublic
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete a for a NATS User NKey
      tags:
      - account
      x-doc-tags:
      - Accounts
    get:
      description: Get Revocation for the given NATS User NKey
      operationId: getNatsUserRevocation
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      - in: path
        name: userNkeyPublic
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserRevocationViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Revocation for a NATS User NKey
      tags:
      - account
      x-doc-tags:
      - Accounts
    put:
      description: Creates or Updates a Revocation for the given NATS User NKey. All
        users issued prior to 'before' will be revoked. If 'before' is set to 0, the
        current timestamp will be used.
      operationId: createOrUpdateNatsUserRevocation
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      - in: path
        name: userNkeyPublic
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NatsUserRevocationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserRevocationViewResponse'
          description: Success
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserRevocationViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create or Update Revocation for a NATS User NKey
      tags:
      - account
      x-doc-tags:
      - Accounts
  /core/beta/accounts/{accountId}/nats-users:
    get:
      description: Returns a list of NATS users for the given account
      operationId: listUsers
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List NATS Users
      tags:
      - account
      x-doc-tags:
      - NATS Users
    post:
      description: Creates a NATS user for an account
      operationId: createUser
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NatsUserCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create NATS User
      tags:
      - account
      x-doc-tags:
      - NATS Users
  /core/beta/accounts/{accountId}/stream-exports:
    get:
      description: List Stream Exports
      operationId: listStreamExports
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamExportListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Stream Exports
      tags:
      - account
      x-doc-tags:
      - Sharing
    post:
      description: Creates Stream Export
      operationId: createStreamExport
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamExportCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamExportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Stream Export
      tags:
      - account
      x-doc-tags:
      - Sharing
  /core/beta/accounts/{accountId}/stream-imports:
    get:
      description: List Stream Imports
      operationId: listStreamImports
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamImportListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Stream Imports
      tags:
      - account
      x-doc-tags:
      - Sharing
    post:
      description: Creates Stream Import
      operationId: createStreamImport
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamImportCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamImportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Stream Import
      tags:
      - account
      x-doc-tags:
      - Sharing
  /core/beta/accounts/{accountId}/stream-imports/shared:
    get:
      description: List stream exports shared with this account
      operationId: listStreamExportsShared
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamExportSharedListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Shared Stream Exports
      tags:
      - account
      x-doc-tags:
      - Sharing
  /core/beta/accounts/{accountId}/subject-exports:
    get:
      description: List Subject Exports
      operationId: listSubjectExports
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectExportListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Subject Exports
      tags:
      - account
      x-doc-tags:
      - Sharing
    post:
      description: Creates Subject Export
      operationId: createSubjectExport
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectExportCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectExportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Subject Export
      tags:
      - account
      x-doc-tags:
      - Sharing
  /core/beta/accounts/{accountId}/subject-imports:
    get:
      description: List Subject Imports
      operationId: listSubjectImports
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectImportListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Subject Imports
      tags:
      - account
      x-doc-tags:
      - Sharing
    post:
      description: Creates Subject Import
      operationId: createSubjectImport
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectImportCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectImportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Subject Import
      tags:
      - account
      x-doc-tags:
      - Sharing
  /core/beta/accounts/{accountId}/subject-imports/shared:
    get:
      description: List subject exports shared with this account
      operationId: listSubjectExportsShared
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectExportSharedListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Shared Subject Exports
      tags:
      - account
      x-doc-tags:
      - Sharing
  /core/beta/accounts/{accountId}/unmanage:
    delete:
      description: Unmanage a Account in a system
      operationId: unmanageAccount
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Unmanage Account
      tags:
      - account
      x-doc-tags:
      - Accounts
  /core/beta/agent-tokens/{tokenId}:
    delete:
      description: Delete an agent token
      operationId: deleteAgentToken
      parameters:
      - in: path
        name: tokenId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Agent Token
      tags:
      - agent-token
      x-doc-tags:
      - Agent Tokens
  /core/beta/alerts:
    get:
      description: Returns a list of alerts
      operationId: listAlerts
      parameters:
      - in: query
        name: status
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Alerts
      tags:
      - session
      x-doc-tags:
      - Alerts
  /core/beta/alerts/{alertId}:
    get:
      description: Get Alert
      operationId: getAlert
      parameters:
      - in: path
        name: alertId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Alert
      tags:
      - alert
      x-doc-tags:
      - Alerts
  /core/beta/alerts/{alertId}/acknowledge:
    patch:
      description: Acknowledge Alert
      operationId: acknowledgeAlert
      parameters:
      - in: path
        name: alertId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Acknowledge Alert
      tags:
      - alert
      x-doc-tags:
      - Alerts
  /core/beta/app-users:
    get:
      description: List App Users
      operationId: listAppUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List App Users
      tags:
      - session
      x-doc-tags:
      - App Users
    post:
      description: Create a User to invite to the Application
      operationId: createAppUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserCreateResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create App User
      tags:
      - session
      x-doc-tags:
      - App Users
  /core/beta/app-users/{appUserId}:
    delete:
      description: Delete App User
      operationId: deleteAppUser
      parameters:
      - in: path
        name: appUserId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete App User
      tags:
      - app-user
      x-doc-tags:
      - App Users
    get:
      description: Get App User
      operationId: getAppUser
      parameters:
      - in: path
        name: appUserId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get App User
      tags:
      - app-user
      x-doc-tags:
      - App Users
    patch:
      description: Update App User
      operationId: updateAppUser
      parameters:
      - in: path
        name: appUserId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserUpdateResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update App User
      tags:
      - app-user
      x-doc-tags:
      - App Users
  /core/beta/app-users/{appUserId}/roles:
    get:
      description: List an App User's Roles
      operationId: listAppUserRoles
      parameters:
      - in: path
        name: appUserId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Roles
      tags:
      - app-user
      x-doc-tags:
      - App Users
  /core/beta/app-users/{appUserId}/teams/{teamId}:
    post:
      description: Assign an App User to a Team. This operation is idempotent; if
        an App User is already assigned to a Team the assignment will be updated with
        the new role
      operationId: assignTeamAppUser
      parameters:
      - in: path
        name: appUserId
        required: true
        schema:
          type: string
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAssignRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Assign App User to Team
      tags:
      - app-user
      x-doc-tags:
      - App Users
  /core/beta/auth-callout/{authCalloutId}:
    delete:
      description: Remove auth callout config and update the control account jwt
      operationId: deleteAuthCallout
      parameters:
      - in: path
        name: authCalloutId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Auth Callout Config
      tags:
      - auth-callout
      x-doc-tags:
      - Auth Callout
    get:
      description: Returns the Auth Callout Config
      operationId: getAuthCallout
      parameters:
      - in: path
        name: authCalloutId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCalloutViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Auth Callout Config
      tags:
      - auth-callout
      x-doc-tags:
      - Auth Callout
  /core/beta/auth-callout/{authCalloutId}/target-accounts:
    get:
      description: Get a list of configured Target Accounts
      operationId: listAuthCalloutTargetAccounts
      parameters:
      - in: path
        name: authCalloutId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCalloutTargetAccountListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Target Account List
      tags:
      - auth-callout
      x-doc-tags:
      - Auth Callout
    post:
      description: Configure a target account
      operationId: addAuthCalloutTargetAccount
      parameters:
      - in: path
        name: authCalloutId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthCalloutAddTargetAccountRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Configure Target Account
      tags:
      - auth-callout
      x-doc-tags:
      - Auth Callout
  /core/beta/auth-callout/{authCalloutId}/target-accounts/{targetAccountId}:
    delete:
      description: Remove configured target account entry
      operationId: deleteAuthCalloutTargetAccount
      parameters:
      - in: path
        name: authCalloutId
        required: true
        schema:
          type: string
      - in: path
        name: targetAccountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Target Account
      tags:
      - auth-callout
      x-doc-tags:
      - Auth Callout
  /core/beta/auth-callout/{authCalloutId}/users:
    get:
      description: Get a list of configured Target Accounts
      operationId: listAuthCalloutUsers
      parameters:
      - in: path
        name: authCalloutId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCalloutUsersListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Target Account List
      tags:
      - auth-callout
      x-doc-tags:
      - Auth Callout
    post:
      description: Create a Control Account User that can access auth callout
      operationId: addAuthCalloutUser
      parameters:
      - in: path
        name: authCalloutId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthCalloutAddUserRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Auth Callout User
      tags:
      - auth-callout
      x-doc-tags:
      - Auth Callout
  /core/beta/auth-callout/{authCalloutId}/users/{acUserId}:
    delete:
      description: Remove control account auth callout user
      operationId: deleteAuthCalloutUser
      parameters:
      - in: path
        name: authCalloutId
        required: true
        schema:
          type: string
      - in: path
        name: acUserId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Control Account User
      tags:
      - auth-callout
      x-doc-tags:
      - Auth Callout
  /core/beta/authz/check:
    post:
      description: Returns applicable policies for calling session and requested service/resource
      operationId: check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthzViewRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthzViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Check Authz Decisions
      tags:
      - authz
      x-doc-tags:
      - Authorization
  /core/beta/authz/policies:
    get:
      description: Returns a list of configured app policies
      operationId: listPolicies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Policy List
      tags:
      - authz
      x-doc-tags:
      - Authorization
  /core/beta/authz/roles:
    get:
      description: Returns a list of configured app roles
      operationId: listRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Authz roles List
      tags:
      - authz
      x-doc-tags:
      - Authorization
  /core/beta/component-versions:
    get:
      description: Get available component versions
      operationId: getAvailableComponentVersions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableComponentVersionsResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Available Component Versions
      tags:
      - component-versions
      x-doc-tags:
      - Component Versions
    post:
      description: Get available component versions by type
      operationId: getAvailableComponentVersionsByType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailableComponentVersionsRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableChartVersions'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Available Component Versions By Type
      tags:
      - component-versions
      x-doc-tags:
      - Component Versions
  /core/beta/consumers/pull/{consumerId}:
    delete:
      description: Deletes a JetStream pull consumer
      operationId: deletePullConsumer
      parameters:
      - in: path
        name: consumerId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Pull Consumer
      tags:
      - pull-consumer
      x-doc-tags:
      - JetStream
    get:
      description: Returns JetStream pull consumer info
      operationId: getPullConsumerInfo
      parameters:
      - in: path
        name: consumerId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPullConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Pull Consumer
      tags:
      - pull-consumer
      x-doc-tags:
      - JetStream
    patch:
      description: Updates a JetStream consumer
      operationId: updatePullConsumer
      parameters:
      - in: path
        name: consumerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPullConsumerUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPullConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Pull Consumer
      tags:
      - pull-consumer
      x-doc-tags:
      - JetStream
  /core/beta/consumers/push/{consumerId}:
    delete:
      description: Delete Push Consumer
      operationId: deletePushConsumer
      parameters:
      - in: path
        name: consumerId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Push Consumer
      tags:
      - push-consumer
      x-doc-tags:
      - JetStream
    get:
      description: Returns JetStream push consumer info
      operationId: getPushConsumerInfo
      parameters:
      - in: path
        name: consumerId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPushConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Push Consumer
      tags:
      - push-consumer
      x-doc-tags:
      - JetStream
    patch:
      description: Update Push Consumer
      operationId: updatePushConsumer
      parameters:
      - in: path
        name: consumerId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPushConsumerUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPushConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Push Consumer
      tags:
      - push-consumer
      x-doc-tags:
      - JetStream
  /core/beta/invitations:
    get:
      description: List of pending invitations
      operationId: listInvitations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List of pending invitations
      tags:
      - session
      x-doc-tags:
      - Invitations
  /core/beta/invitations/{teamId}:
    post:
      description: Accept or reject team invitation
      operationId: decideInvitation
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationDecisionRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Accept or reject team invitation
      tags:
      - session
      x-doc-tags:
      - Invitations
  /core/beta/jetstream/kv-bucket/{streamId}:
    delete:
      description: Deletes KV Bucket
      operationId: deleteKvBucket
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete KV Bucket
      tags:
      - kv-bucket
      x-doc-tags:
      - 'JetStream: KV Buckets'
    get:
      description: Returns JetStream KV bucket info
      operationId: getKvBucket
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSKVBucketViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get KV Bucket
      tags:
      - kv-bucket
      x-doc-tags:
      - 'JetStream: KV Buckets'
    patch:
      description: Update KV Bucket
      operationId: updateKvBucket
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSKVBucketUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSKVBucketViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update KV Bucket
      tags:
      - kv-bucket
      x-doc-tags:
      - 'JetStream: KV Buckets'
  /core/beta/jetstream/kv-bucket/{streamId}/consumers:
    get:
      description: List Consumers
      operationId: listKvConsumers
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSConsumerInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Consumers
      tags:
      - kv-bucket
      x-doc-tags:
      - 'JetStream: KV Buckets'
  /core/beta/jetstream/kv-bucket/{streamId}/consumers/pull:
    post:
      description: Creates Pull Consumer
      operationId: createKvPullConsumer
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPullConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPullConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Pull Consumer
      tags:
      - kv-bucket
      x-doc-tags:
      - 'JetStream: KV Buckets'
  /core/beta/jetstream/kv-bucket/{streamId}/consumers/push:
    post:
      description: Creates Push Consumer
      operationId: createKvPushConsumer
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPushConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPushConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Push Consumer
      tags:
      - kv-bucket
      x-doc-tags:
      - 'JetStream: KV Buckets'
  /core/beta/jetstream/kv-bucket/{streamId}/purge:
    delete:
      description: Purges KV Bucket
      operationId: purgeKvBucket
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Purge KV Bucket
      tags:
      - kv-bucket
      x-doc-tags:
      - 'JetStream: Streams'
  /core/beta/jetstream/mirror/{streamId}:
    delete:
      description: Delete Mirror
      operationId: deleteMirror
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Mirror
      tags:
      - mirror
      x-doc-tags:
      - 'JetStream: Mirrors'
    get:
      description: Get Mirror
      operationId: getMirror
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSMirrorInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Mirror
      tags:
      - mirror
      x-doc-tags:
      - 'JetStream: Mirrors'
    patch:
      description: Update Mirror
      operationId: updateMirror
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSMirrorConfigRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSMirrorInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Mirror
      tags:
      - mirror
      x-doc-tags:
      - 'JetStream: Mirrors'
  /core/beta/jetstream/mirror/{streamId}/consumers:
    get:
      description: List Consumers
      operationId: listMirrorConsumers
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSConsumerInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Consumers
      tags:
      - mirror
      x-doc-tags:
      - 'JetStream: Mirrors'
  /core/beta/jetstream/mirror/{streamId}/consumers/pull:
    post:
      description: Create Pull Consumer
      operationId: createMirrorPullConsumer
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPullConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPullConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Pull Consumer
      tags:
      - mirror
      x-doc-tags:
      - 'JetStream: Mirrors'
  /core/beta/jetstream/mirror/{streamId}/consumers/push:
    post:
      description: Create Push consumer
      operationId: createMirrorPushConsumer
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPushConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPushConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Push consumer
      tags:
      - mirror
      x-doc-tags:
      - 'JetStream: Mirrors'
  /core/beta/jetstream/mirror/{streamId}/purge:
    delete:
      description: Purges Mirror
      operationId: purgeMirror
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Purge Mirror
      tags:
      - mirror
      x-doc-tags:
      - 'JetStream: Streams'
  /core/beta/jetstream/object-bucket/{streamId}:
    delete:
      description: Deletes Object Bucket
      operationId: deleteObjectBucket
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Object Bucket
      tags:
      - object-bucket
      x-doc-tags:
      - 'JetStream: Object Buckets'
    get:
      description: Returns JetStream Object bucket info
      operationId: getObjectBucket
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSObjectBucketViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Object Bucket
      tags:
      - object-bucket
      x-doc-tags:
      - 'JetStream: Object Buckets'
    patch:
      description: Update Object Bucket
      operationId: updateObjectBucket
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSObjectBucketUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSObjectBucketViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Object Bucket
      tags:
      - object-bucket
      x-doc-tags:
      - 'JetStream: Object Buckets'
  /core/beta/jetstream/object-bucket/{streamId}/consumers:
    get:
      description: List Consumers
      operationId: listObjConsumers
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSConsumerInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Consumers
      tags:
      - object-bucket
      x-doc-tags:
      - 'JetStream: Object Buckets'
  /core/beta/jetstream/object-bucket/{streamId}/consumers/pull:
    post:
      description: Creates Pull Consumer
      operationId: createObjPullConsumer
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPullConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPullConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Pull Consumer
      tags:
      - object-bucket
      x-doc-tags:
      - 'JetStream: Object Buckets'
  /core/beta/jetstream/object-bucket/{streamId}/consumers/push:
    post:
      description: Creates Push Consumer
      operationId: createObjPushConsumer
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPushConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPushConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Push Consumer
      tags:
      - object-bucket
      x-doc-tags:
      - 'JetStream: Object Buckets'
  /core/beta/jetstream/object-bucket/{streamId}/purge:
    delete:
      description: Purges Object Bucket
      operationId: purgeObjBucket
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Purge Object Bucket
      tags:
      - object-bucket
      x-doc-tags:
      - 'JetStream: Streams'
  /core/beta/jetstream/stream/{streamId}:
    delete:
      description: Deletes Stream
      operationId: deleteStream
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Stream
      tags:
      - stream
      x-doc-tags:
      - 'JetStream: Streams'
    get:
      description: Get Stream
      operationId: getStreamInfo
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSStreamInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Stream
      tags:
      - stream
      x-doc-tags:
      - 'JetStream: Streams'
    patch:
      description: Updates Stream
      operationId: updateStream
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSStreamConfigRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSStreamInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Stream
      tags:
      - stream
      x-doc-tags:
      - 'JetStream: Streams'
  /core/beta/jetstream/stream/{streamId}/consumers:
    get:
      description: List Consumers
      operationId: listConsumers
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSConsumerInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Consumers
      tags:
      - stream
      x-doc-tags:
      - 'JetStream: Consumers'
  /core/beta/jetstream/stream/{streamId}/consumers/pull:
    post:
      description: Creates Pull Consumer
      operationId: createPullConsumer
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPullConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPullConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Pull Consumer
      tags:
      - stream
      x-doc-tags:
      - 'JetStream: Streams'
  /core/beta/jetstream/stream/{streamId}/consumers/push:
    post:
      description: Create Push Consumer
      operationId: createPushConsumer
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JSPushConsumerConfigRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JSPushConsumerInfoResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Push Consumer
      tags:
      - stream
      x-doc-tags:
      - 'JetStream: Streams'
  /core/beta/jetstream/stream/{streamId}/purge:
    delete:
      description: Purges Stream
      operationId: purgeStream
      parameters:
      - in: path
        name: streamId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Purge Stream
      tags:
      - stream
      x-doc-tags:
      - 'JetStream: Streams'
  /core/beta/nats-user-issuances/{issuanceId}:
    get:
      description: Get a history of all downloads and imports of the given issuance
      operationId: getNatsUserIssuance
      parameters:
      - in: path
        name: issuanceId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserIssuanceViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get nats user issuance
      tags:
      - issuance
      x-doc-tags:
      - NATS User Issuances
  /core/beta/nats-users/{userId}:
    delete:
      description: Deletes a NATS user from an account
      operationId: deleteNatsUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete NATS User
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
    get:
      description: Returns a NATS user assigned to the account
      operationId: getNatsUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get NATS User
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
    patch:
      description: Updates NATS User in an account
      operationId: updateNatsUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NatsUserUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update NATS User
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /core/beta/nats-users/{userId}/app-users:
    get:
      description: Returns a list of Team App Users associated with the NATS user
      operationId: listNatsUserTeamAppUsers
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Team App Users
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /core/beta/nats-users/{userId}/app-users/{teamAppUserId}:
    delete:
      description: Unassign a Team App User from a NATS User
      operationId: unAssignNatsUserTeamAppUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: path
        name: teamAppUserId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Unassign Team App User from NATS User
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
    post:
      description: Assign a Team App User to a NATS User. This operation is idempotent;
        if an App User is already assigned to a NATS User the assignment will be updated
        with the new role
      operationId: assignNatsUserTeamAppUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: path
        name: teamAppUserId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAssignRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Assign Team App User to NATS User
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /core/beta/nats-users/{userId}/bearer-jwt:
    post:
      description: Returns a bearer token a NATS user assigned to the account
      operationId: downloadNatsUserBearerJwt
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Bearer JWT
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /core/beta/nats-users/{userId}/connections:
    get:
      description: List NATs User Connections
      operationId: listNatsUserConnections
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
      - in: query
        name: cid
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: string
      - in: query
        name: subject
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserConnectionsListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List NATs User Connections
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /core/beta/nats-users/{userId}/copy:
    post:
      description: Copies the user, changing name and account SK group. Generates
        new user NKey
      operationId: copyNatsUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NatsUserCopyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Copy nats user
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /core/beta/nats-users/{userId}/creds:
    post:
      description: Returns a creds file for a NATS user assigned to the account
      operationId: downloadNatsUserCreds
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Creds
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /core/beta/nats-users/{userId}/http-gw-token:
    post:
      description: Returns a NATS HTTP Gateway token
      operationId: downloadNatsUserHttpGwToken
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserHTTPGWTokenCreateReply'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get HTTP Gateway Token
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /core/beta/nats-users/{userId}/issuances:
    get:
      description: Lists the history of user credential issuances for the user
      operationId: listNatsUserIssuances
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserIssuancesListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List nats user issuances
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /core/beta/nats-users/{userId}/rotate:
    post:
      description: Generates new user nkey
      operationId: rotateNatsUser
      parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Rotate nats user nkey and seed
      tags:
      - nats-user
      x-doc-tags:
      - NATS Users
  /core/beta/personal-access-tokens:
    get:
      description: Returns a list of Personal Access Tokens
      operationId: listAppUserAccessTokens
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Personal Access Tokens
      tags:
      - session
      x-doc-tags:
      - Session
    post:
      description: Creates a Personal Access Token
      operationId: createAppUserAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAccessTokenCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenCreateResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Personal Access Token
      tags:
      - session
      x-doc-tags:
      - Session
  /core/beta/personal-access-tokens/{tokenId}:
    delete:
      description: Delete Personal Access Token
      operationId: deletePersonalAccessToken
      parameters:
      - in: path
        name: tokenId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Personal Access Token
      tags:
      - personal-access-token
      x-doc-tags:
      - Session
    get:
      description: Get Personal Access Token
      operationId: getPersonalAccessToken
      parameters:
      - in: path
        name: tokenId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Personal Access Token
      tags:
      - personal-access-token
      x-doc-tags:
      - Session
    patch:
      description: Update Personal Access Token
      operationId: updatePersonalAccessToken
      parameters:
      - in: path
        name: tokenId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAccessTokenUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Personal Access Token
      tags:
      - personal-access-token
      x-doc-tags:
      - Session
  /core/beta/platform-components/connect:
    post:
      description: Connection endpoint for platform components to use. Requires a
        platform component bearer token
      operationId: platformComponentConnect
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformComponentsConnectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformComponentsConnectViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Connect a Platform Component
      tags:
      - platform-components
      x-doc-tags:
      - Platform Components
  /core/beta/service-account-tokens/app/{tokenId}:
    delete:
      description: Delete App Service Account Token
      operationId: deleteAppServiceAccountToken
      parameters:
      - in: path
        name: tokenId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete App Service Account Token
      tags:
      - app-service-account-tokens
      x-doc-tags:
      - App Service Accounts
    get:
      description: Get App Service Account Token
      operationId: getAppServiceAccountToken
      parameters:
      - in: path
        name: tokenId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get App Service Account Token
      tags:
      - app-service-account-tokens
      x-doc-tags:
      - App Service Accounts
    patch:
      description: Update App Service Account Token
      operationId: updateAppServiceAccountToken
      parameters:
      - in: path
        name: tokenId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAccessTokenUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update App Service Account Token
      tags:
      - app-service-account-tokens
      x-doc-tags:
      - App Service Accounts
  /core/beta/service-account-tokens/team/{tokenId}:
    delete:
      description: Delete Team Service Account Token
      operationId: deleteTeamServiceAccountToken
      parameters:
      - in: path
        name: tokenId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Team Service Account Token
      tags:
      - team-service-account-tokens
      x-doc-tags:
      - Team Service Accounts
    get:
      description: Get Team Service Account Token
      operationId: getTeamServiceAccountToken
      parameters:
      - in: path
        name: tokenId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Team Service Account Token
      tags:
      - team-service-account-tokens
      x-doc-tags:
      - Team Service Accounts
    patch:
      description: Update Team Service Account Token
      operationId: updateTeamServiceAccountToken
      parameters:
      - in: path
        name: tokenId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAccessTokenUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Team Service Account Token
      tags:
      - team-service-account-tokens
      x-doc-tags:
      - Team Service Accounts
  /core/beta/service-accounts/app:
    get:
      description: List App Service Accounts
      operationId: listAppServiceAccounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List App Service Accounts
      tags:
      - session
      x-doc-tags:
      - App Service Accounts
    post:
      description: Create App Service Account
      operationId: createAppServiceAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create App Service Account
      tags:
      - session
      x-doc-tags:
      - App Service Accounts
  /core/beta/service-accounts/app/{serviceAccountId}:
    delete:
      description: Delete App Service Account
      operationId: deleteAppServiceAccount
      parameters:
      - in: path
        name: serviceAccountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete App Service Account
      tags:
      - app-service-account
      x-doc-tags:
      - App Service Accounts
    get:
      description: Get App Service Account
      operationId: getAppServiceAccount
      parameters:
      - in: path
        name: serviceAccountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get App Service Account
      tags:
      - app-service-account
      x-doc-tags:
      - App Service Accounts
    patch:
      description: Update App Service Account
      operationId: updateAppServiceAccount
      parameters:
      - in: path
        name: serviceAccountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update App Service Account
      tags:
      - app-service-account
      x-doc-tags:
      - App Service Accounts
  /core/beta/service-accounts/app/{serviceAccountId}/tokens:
    get:
      description: List Access Tokens for App Service Account
      operationId: listAppServiceAccountTokens
      parameters:
      - in: path
        name: serviceAccountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Access Tokens for App Service Account
      tags:
      - app-service-account
      x-doc-tags:
      - App Service Accounts
    post:
      description: Create Acess Token for App Service Account
      operationId: createAppServiceAccountToken
      parameters:
      - in: path
        name: serviceAccountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAccessTokenCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenCreateResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Acess Token for App Service Account
      tags:
      - app-service-account
      x-doc-tags:
      - App Service Accounts
  /core/beta/service-accounts/team/{serviceAccountId}:
    delete:
      description: Delete Team Service Account
      operationId: deleteTeamServiceAccount
      parameters:
      - in: path
        name: serviceAccountId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Team Service Account
      tags:
      - team-service-account
      x-doc-tags:
      - Team Service Accounts
    get:
      description: Get Team Service Account
      operationId: getTeamServiceAccount
      parameters:
      - in: path
        name: serviceAccountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Team Service Account
      tags:
      - team-service-account
      x-doc-tags:
      - Team Service Accounts
    patch:
      description: Update Team Service Account
      operationId: updateTeamServiceAccount
      parameters:
      - in: path
        name: serviceAccountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Team Service Account
      tags:
      - team-service-account
      x-doc-tags:
      - Team Service Accounts
  /core/beta/service-accounts/team/{serviceAccountId}/tokens:
    get:
      description: List Access Tokens for Team Service Account
      operationId: listTeamServiceAccountTokens
      parameters:
      - in: path
        name: serviceAccountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Access Tokens for Team Service Account
      tags:
      - team-service-account
      x-doc-tags:
      - Team Service Accounts
    post:
      description: Create Acess Token for Team Service Account
      operationId: createTeamServiceAccountToken
      parameters:
      - in: path
        name: serviceAccountId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAccessTokenCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAccessTokenCreateResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Acess Token for Team Service Account
      tags:
      - team-service-account
      x-doc-tags:
      - Team Service Accounts
  /core/beta/stream-exports/{streamExportId}:
    delete:
      description: Delete Stream Export
      operationId: deleteStreamExport
      parameters:
      - in: path
        name: streamExportId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Stream Export
      tags:
      - stream-export
      x-doc-tags:
      - Sharing
    get:
      description: Returns Stream Export info
      operationId: getStreamExport
      parameters:
      - in: path
        name: streamExportId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamExportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Stream Export
      tags:
      - stream-export
      x-doc-tags:
      - Sharing
  /core/beta/stream-exports/{streamExportId}/shares:
    get:
      description: List stream shares for this export
      operationId: listStreamShares
      parameters:
      - in: path
        name: streamExportId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamShareListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Stream Shares
      tags:
      - stream-export
      x-doc-tags:
      - Sharing
    post:
      description: Creates Stream Shares
      operationId: createStreamShares
      parameters:
      - in: path
        name: streamExportId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StreamShareCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamShareViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Stream Shares
      tags:
      - stream-export
      x-doc-tags:
      - Sharing
  /core/beta/stream-exports/{streamExportId}/shares/{targetAccountNKeyPublic}:
    delete:
      description: Revokes the share for provided Account NKey
      operationId: deleteStreamShare
      parameters:
      - in: path
        name: streamExportId
        required: true
        schema:
          type: string
      - in: path
        name: targetAccountNKeyPublic
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Stream Share
      tags:
      - stream-export
      x-doc-tags:
      - Sharing
  /core/beta/stream-imports/{streamImportId}:
    delete:
      description: Delete Stream Import
      operationId: deleteStreamImport
      parameters:
      - in: path
        name: streamImportId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Stream Import
      tags:
      - stream-import
      x-doc-tags:
      - Sharing
    get:
      description: Returns Stream Import
      operationId: getStreamImport
      parameters:
      - in: path
        name: streamImportId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StreamImportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Stream Import
      tags:
      - stream-import
      x-doc-tags:
      - Sharing
  /core/beta/subject-exports/{subjectExportId}:
    delete:
      description: Delete Subject Export
      operationId: deleteSubjectExport
      parameters:
      - in: path
        name: subjectExportId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Subject Export
      tags:
      - subject-export
      x-doc-tags:
      - Sharing
    get:
      description: Returns Subject Export info
      operationId: getSubjectExport
      parameters:
      - in: path
        name: subjectExportId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectExportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Subject Export
      tags:
      - subject-export
      x-doc-tags:
      - Sharing
    patch:
      description: Update Subject Export
      operationId: updateSubjectExport
      parameters:
      - in: path
        name: subjectExportId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectExportUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectExportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Subject Export
      tags:
      - subject-export
      x-doc-tags:
      - Sharing
  /core/beta/subject-exports/{subjectExportId}/shares:
    get:
      description: List subject shares for this export
      operationId: listSubjectShares
      parameters:
      - in: path
        name: subjectExportId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectShareListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Subject Shares
      tags:
      - subject-export
      x-doc-tags:
      - Sharing
    post:
      description: Creates Subject Shares
      operationId: createSubjectShares
      parameters:
      - in: path
        name: subjectExportId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectShareCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectShareViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Subject Shares
      tags:
      - subject-export
      x-doc-tags:
      - Sharing
  /core/beta/subject-exports/{subjectExportId}/shares/{targetAccountNKeyPublic}:
    delete:
      description: Revokes the share for account
      operationId: deleteSubjectShare
      parameters:
      - in: path
        name: subjectExportId
        required: true
        schema:
          type: string
      - in: path
        name: targetAccountNKeyPublic
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Subject Share
      tags:
      - subject-export
      x-doc-tags:
      - Sharing
  /core/beta/subject-imports/{subjectImportId}:
    delete:
      description: Delete Subject Import
      operationId: deleteSubjectImport
      parameters:
      - in: path
        name: subjectImportId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Subject Import
      tags:
      - subject-import
      x-doc-tags:
      - Sharing
    get:
      description: Returns Subject Import
      operationId: getSubjectImport
      parameters:
      - in: path
        name: subjectImportId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectImportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Subject Import
      tags:
      - subject-import
      x-doc-tags:
      - Sharing
    patch:
      description: Updates Subject Import
      operationId: updateSubjectImport
      parameters:
      - in: path
        name: subjectImportId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubjectImportUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubjectImportViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Subject Import
      tags:
      - subject-import
      x-doc-tags:
      - Sharing
  /core/beta/systems/{systemId}:
    delete:
      description: Deletes System
      operationId: deleteSystem
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete System
      tags:
      - system
      x-doc-tags:
      - Systems
    get:
      description: Returns a System by ID
      operationId: getSystem
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get System
      tags:
      - system
      x-doc-tags:
      - Systems
    patch:
      description: Updates a System
      operationId: updateSystem
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      - description: To test the backend connection without updating the system, pass
          test_connection=true in query parameter.
        in: query
        name: test_connection
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update System
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/accounts:
    get:
      description: List Accounts
      operationId: listAccounts
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Accounts
      tags:
      - system
      x-doc-tags:
      - Accounts
    post:
      description: Create Account
      operationId: createAccount
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Account
      tags:
      - system
      x-doc-tags:
      - Accounts
  /core/beta/systems/{systemId}/accounts-overview-metrics:
    get:
      description: List Accounts overview metrics
      operationId: listAccountsOverviewMetrics
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsOverviewListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Accounts overview metrics
      tags:
      - system
      x-doc-tags:
      - Accounts
  /core/beta/systems/{systemId}/agent-tokens:
    get:
      description: List Agent Tokens
      operationId: listAgentTokens
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTokenListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Agent Tokens
      tags:
      - system
      x-doc-tags:
      - Accounts
    post:
      description: Rotate token to connect a dataplane agent
      operationId: rotateAgentToken
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentTokenRotateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTokenRotateResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Rotate Agent Token
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/agent-tokens/current:
    get:
      description: Get the Current Agent Token
      operationId: getCurrentAgentToken
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentTokenCurrentResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Current Agent Token
      tags:
      - system
      x-doc-tags:
      - App Users
  /core/beta/systems/{systemId}/alert-rules:
    get:
      description: List System Alert Rules
      operationId: listSystemAlertRules
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List System Alert Rules
      tags:
      - system
      x-doc-tags:
      - Alerts
    post:
      description: Create System Alert Rule
      operationId: createSystemAlertRule
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRuleSystemCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create System Alert Rule
      tags:
      - system
      x-doc-tags:
      - Alerts
  /core/beta/systems/{systemId}/alert-rules/{alertRuleId}:
    delete:
      description: Delete System Alert rule
      operationId: deleteSystemAlertRule
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      - in: path
        name: alertRuleId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete System Alert Rule
      tags:
      - system
      x-doc-tags:
      - Alerts
    get:
      description: Get System Alert Rule
      operationId: getSystemAlertRule
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      - in: path
        name: alertRuleId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get System Alert Rule
      tags:
      - system
      x-doc-tags:
      - Alerts
    patch:
      description: Update System Alert Rules
      operationId: updateSystemAlertRule
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      - in: path
        name: alertRuleId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlertRuleUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertRuleViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update System Alert Rules
      tags:
      - system
      x-doc-tags:
      - Alerts
  /core/beta/systems/{systemId}/alert-rules/{alertRuleId}/run:
    get:
      description: Run System Alert Rule and return an alert object if the rule condition
        is met
      operationId: runSystemAlertRule
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      - in: path
        name: alertRuleId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlertViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Run System Alert Rule
      tags:
      - system
      x-doc-tags:
      - Alerts
  /core/beta/systems/{systemId}/app-users:
    get:
      description: Returns a list of Team App Users associated with the System
      operationId: listSystemTeamAppUsers
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List System Team App Users
      tags:
      - system
      x-doc-tags:
      - App Users
  /core/beta/systems/{systemId}/app-users/{teamAppUserId}:
    delete:
      description: Unassign a Team App User from a System
      operationId: unAssignSystemTeamAppUser
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      - in: path
        name: teamAppUserId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Unassign Team App User from System
      tags:
      - system
      x-doc-tags:
      - App Users
    post:
      description: Assign a Team App User to a System. This operation is idempotent;
        if an App User is already assigned to the System the assignment will be updated
        with the new role
      operationId: assignSystemTeamAppUser
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      - in: path
        name: teamAppUserId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAssignRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Assign Team App User to System
      tags:
      - system
      x-doc-tags:
      - App Users
  /core/beta/systems/{systemId}/auth-callout:
    get:
      description: List Auth Callout Configs for the System
      operationId: listAuthCalloutConfigs
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCalloutConfigListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Auth Callout Configs
      tags:
      - system
      x-doc-tags:
      - Systems
    post:
      description: Saves an auth callout config for the system
      operationId: enableAuthCallout
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthCalloutEnableRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Enable Auth Callout For System
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/auth-callout/authenticators:
    get:
      description: Get a list of authenticators available for use
      operationId: listAuthCalloutAuthenticators
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCalloutAuthenticatorsListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get List of Available Authenticators
      tags:
      - system
      x-doc-tags:
      - Auth Callout
  /core/beta/systems/{systemId}/bulk/shares:
    post:
      description: allows sharing streams/exports across multiple accounts at once
      operationId: bulkShare
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkShareRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Share assets across accounts
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/connections:
    get:
      description: List Connections
      operationId: listConnections
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      - in: query
        name: sort
        schema:
          type: string
      - in: query
        name: account
        schema:
          type: string
      - in: query
        name: cid
        schema:
          type: string
      - in: query
        name: state
        schema:
          type: string
      - in: query
        name: subject
        schema:
          type: string
      - in: query
        name: limit
        schema:
          type: number
      - in: query
        name: user
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConnectionsListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Connections
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/export:
    get:
      description: Export System Seeds
      operationId: getSystemExport
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemExportResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Export System Seeds
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/import-account:
    post:
      description: Imports an existing account
      operationId: importAccount
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemAccountImportRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Import Account
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/import-user:
    post:
      description: Imports an existing NATS user
      operationId: importUser
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemUserImportRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsUserViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Import User
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/info/accounts:
    get:
      description: List info for Accounts within a System. Allows a user with access
        to a single account in a system to list info for all accounts in that system
      operationId: listSystemInfoAccounts
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List System Accounts Info
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/info/servers:
    get:
      description: List info for NATS Servers within a System
      operationId: listSystemInfoServers
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsServerInfoListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List System Servers info
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/jwt-sync:
    post:
      description: Use this endpoint to re-issue all JWTs. This endpoint just marks
        all account JWTs for renewal. The actual renewal takes place asynchronously
        and may take a while depending on the number of accounts.
      operationId: systemJWTSync
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Re-sync JWTs of all accounts in this system
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/limits:
    get:
      description: Get system total and allocated limits
      operationId: getSystemLimits
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemLimitsResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get System Limits
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/nats-clusters:
    get:
      description: List cluster information
      operationId: listClusters
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsClusterListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Clusters
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/platform-components:
    patch:
      description: Update the different platform components config
      operationId: updatePlatformComponents
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformComponentsUpdateRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Platform Components for System
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/platform-components/{id}/tokens:
    get:
      description: Retrieves an access token for the platform component
      operationId: getComponentToken
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      - in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformComponentTokenViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get a component access token
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/prometheus-metrics:
    get:
      description: Get Prometheus Metrics
      operationId: getSystemPrometheusMetrics
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Prometheus Metrics
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/servers:
    get:
      description: List server information
      operationId: listServers
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NatsServerListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Servers
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/systems/{systemId}/unmanage:
    delete:
      description: Same as deleting a system but skips purging system and accounts
        from NATS
      operationId: unmanageSystem
      parameters:
      - in: path
        name: systemId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Unmanage System
      tags:
      - system
      x-doc-tags:
      - Systems
  /core/beta/teams:
    get:
      description: Returns a list of Teams
      operationId: listTeams
      parameters:
      - in: query
        name: assigned
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Teams
      tags:
      - session
      x-doc-tags:
      - Teams
    post:
      description: Create a Team
      operationId: createTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Team
      tags:
      - session
      x-doc-tags:
      - Teams
  /core/beta/teams/{teamId}:
    delete:
      description: Deletes Team
      operationId: deleteTeam
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Delete Team
      tags:
      - team
      x-doc-tags:
      - Teams
    get:
      description: Returns a Team by ID
      operationId: getTeam
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Team
      tags:
      - team
      x-doc-tags:
      - Teams
    patch:
      description: Updates a Team
      operationId: updateTeam
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update Team
      tags:
      - team
      x-doc-tags:
      - Teams
  /core/beta/teams/{teamId}/app-users:
    get:
      description: Returns a list of App Users associated with the Team
      operationId: listTeamAppUsers
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List App Users
      tags:
      - team
      x-doc-tags:
      - App Users
  /core/beta/teams/{teamId}/app-users/{appUserId}:
    delete:
      description: Unassign an App User from a Team
      operationId: unAssignTeamAppUser
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      - in: path
        name: appUserId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Unassign App User from Team
      tags:
      - team
      x-doc-tags:
      - App Users
    patch:
      description: Update an App User's assignment on a Team
      operationId: updateTeamAppUser
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      - in: path
        name: appUserId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserAssignRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserAssignResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Update App User Team Assignment
      tags:
      - team
      x-doc-tags:
      - App Users
  /core/beta/teams/{teamId}/app-users/invitations:
    post:
      description: Invites the specified User to join the Team. This operation is
        idempotent, with the caveat that Roles will not be downgraded; if the User
        is already assigned to the Team or Associated Resources and the requested
        Role is more permissive than the existing Role, the Role will be updated.
      operationId: inviteAppUser
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUserInvitationRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppUserInvitationResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Invite App Users
      tags:
      - team
      x-doc-tags:
      - Invitations
  /core/beta/teams/{teamId}/app-users/leave:
    post:
      description: Leave the specified team
      operationId: leaveTeam
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Leave Team
      tags:
      - team
      x-doc-tags:
      - Session
  /core/beta/teams/{teamId}/import-system:
    post:
      description: Import a System
      operationId: importSystem
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemImportRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Import a System
      tags:
      - team
      x-doc-tags:
      - Teams
  /core/beta/teams/{teamId}/info/app-users:
    get:
      description: List info for App Users in Team.  Allows any user to list info
        for app users within their team.
      operationId: listTeamInfoAppUsers
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamAppUserListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List info of App Users in Team
      tags:
      - team
      x-doc-tags:
      - Teams
  /core/beta/teams/{teamId}/service-accounts:
    get:
      description: List Team Service Accounts
      operationId: listTeamServiceAccounts
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Team Service Accounts
      tags:
      - team
      x-doc-tags:
      - Teams
    post:
      description: Create Team Service Account
      operationId: createTeamServiceAccount
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceAccountCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceAccountViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create Team Service Account
      tags:
      - team
      x-doc-tags:
      - Teams
  /core/beta/teams/{teamId}/systems:
    get:
      description: Returns a list of Systems
      operationId: listTeamSystems
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemListResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: List Systems
      tags:
      - team
      x-doc-tags:
      - Systems
    post:
      description: Create a System
      operationId: createSystem
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemViewResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Create System
      tags:
      - team
      x-doc-tags:
      - Systems
  /core/beta/teams/{teamId}/team-limits:
    get:
      description: Get team limits total and allocated
      operationId: getTeamLimits
      parameters:
      - in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamLimitsResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Team Limits
      tags:
      - team
      x-doc-tags:
      - Teams
  /core/beta/terms/accept:
    post:
      description: Accept terms
      operationId: acceptTerms
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptTermsResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Accept terms
      tags:
      - session
      x-doc-tags:
      - Session
  /core/beta/version:
    get:
      description: Returns information about the Synadia Control Plane Version
      operationId: getVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Version
      tags:
      - session
      x-doc-tags:
      - Session
  /workloads/alpha/{accountId}/limits:
    get:
      description: Get Workloads limits
      operationId: getWorkloadLimits
      parameters:
      - in: path
        name: accountId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkloadLimitsResponse'
          description: Success
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not Found
      summary: Get Workloads limits
      tags:
      - workloads
      x-doc-tags:
      - Workloads
security:
- bearerAuth: []
  sessionAuth: []
servers:
- description: Path to Synadia Control Plane Server Api
  url: '{baseUrl}/api'
  variables:
    baseUrl: {}
tags:
- description: App admin related functions
  name: Admin
- description: Get resources related to the current user session
  name: Session
- description: Manage NATS systems
  name: Systems
- description: Manage teams
  name: Teams
- description: Get Component Versions from Upstream
  name: Component Versions
- description: Manage SCP Agent Access Tokens
  name: Agent Tokens
- description: Manage NATS accounts
  name: Accounts
- description: Manage NATS users
  name: NATS Users
- description: Manage JetStream assets for an Account
  name: JetStream
- description: Manage JetStream streams for an Account
  name: 'JetStream: Streams'
- description: Manage JetStream KV Buckets for an Account
  name: 'JetStream: KV Buckets'
- description: Manage JetStream Object Buckets for an Account
  name: 'JetStream: Object Buckets'
- description: Manage JetStream mirrors for an Account
  name: 'JetStream: Mirrors'
- description: Manage JetStream consumers for a Stream
  name: 'JetStream: Consumers'
- description: Share Streams and Services between Accounts
  name: Sharing
- description: Manage alerts for NATS Systems and Accounts
  name: Alerts
- description: Manage People with access to Control Plane
  name: App Users
- description: Manage Authorization Policies for Control Plane users
  name: Authorization
- description: Account Signing Key Groups
  name: Signing Key Groups
- description: Manage user invitations
  name: Invitations
- description: Manage NATS user issuances
  name: NATS User Issuances
- description: Manage Team Service Accounts for accessing API
  name: Team Service Accounts
- description: Manage App Service Accounts for accessing API
  name: App Service Accounts
- description: NATS-based data pipelines
  name: NATS Connector Service
- description: Manage Synadia Platform Components Configuration
  name: Platform Components
- description: Manage Synadia Platform Workloads
  name: Workloads
- description: Manage NATS Auth Callout Configuration
  name: Auth Callout
- description: Manage Synadia Schema Registry
  name: Schema Registry
- description: Manage OIDC authentication providers
  name: OIDC Providers
